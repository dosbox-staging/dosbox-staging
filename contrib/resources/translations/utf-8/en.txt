:CONFIG_FULLSCREEN
Start directly in fullscreen.
Run INTRO and see Special Keys for window control hotkeys.
.
:CONFIG_DISPLAY
Number of display to use; values depend on OS and user settings.
.
:CONFIG_FULLRESOLUTION
What resolution to use for fullscreen: 'original', 'desktop'
or a fixed size (e.g. 1024x768).
.
:CONFIG_WINDOWRESOLUTION
Set window size when running in windowed mode:
  default:   Select the best option based on your
             environment and other settings.
  small, medium, or large (or s, m, l):
             Size the window relative to the desktop.
  <custom>:  Scale the window to the given dimensions in
             WxH format. For example: 1024x768.
             Scaling is not performed for output=surface.
.
:CONFIG_VIEWPORT_RESOLUTION
Set the viewport size (drawable area) within the window/screen:
  fit:       Fit the viewport to the available window/screen (default).
  <custom>:  Limit the viewport within to a custom resolution or percentage of
             the desktop. Specified in WxH, N%, N.M%. Examples: 960x720 or 50%
.
:CONFIG_WINDOW_POSITION
Set initial window position when running in windowed mode:
  auto:      Let the window manager decide the position.
  <custom>:  Set window position in X,Y format. For example: 250,100
             0,0 is the top-left corner of the screen.
.
:CONFIG_WINDOW_DECORATIONS
Controls whether to display window decorations in windowed mode.
.
:CONFIG_TRANSPARENCY
Set the transparency of the DOSBox Staging screen.
From 0 (no transparency) to 90 (high transparency).
.
:CONFIG_MAX_RESOLUTION
This setting has been renamed to viewport_resolution.
.
:CONFIG_HOST_RATE
Set the host's refresh rate:
  auto:      Use SDI rates, or VRR rates when fullscreen on a high-refresh display.
  sdi:       Use serial device interface (SDI) rates, without further adjustment.
  vrr:       Deduct 3 Hz from the reported rate (best-practice for VRR displays).
  <custom>:  Specify a custom rate as a whole or decimal value greater than 23.000.
.
:CONFIG_VSYNC
Synchronize with display refresh rate if supported. This can
reduce flickering and tearing, but may also impact performance.
.
:CONFIG_VSYNC_SKIP
Number of microseconds to allow rendering to block before skipping the next frame. 0 disables this and will always render.
.
:CONFIG_PRESENTATION_MODE
Optionally select the frame presentation mode:
  auto:  Intelligently time and drop frames to prevent
         emulation stalls, based on host and DOS frame rates.
  cfr:   Always present DOS frames at a constant frame rate.
  vfr:   Always present changed DOS frames at a variable frame rate.
.
:CONFIG_OUTPUT
What video system to use for output.
.
:CONFIG_TEXTURE_RENDERER
Choose a renderer driver when using a texture output mode.
Use texture_renderer=auto for an automatic choice.
.
:CONFIG_CAPTURE_MOUSE
Choose a mouse control method:
   onclick:        Capture the mouse when clicking any button in the window.
   onstart:        Capture the mouse immediately on start.
   seamless:       Let the mouse move seamlessly; captures only with middle-click or hotkey.
   nomouse:        Hide the mouse and don't send input to the game.
Choose how middle-clicks are handled (second parameter):
   middlegame:     Middle-clicks are sent to the game.
   middlerelease:  Middle-click will release the captured mouse, and also capture when seamless.
Defaults (if not present or incorrect): seamless middlerelease
.
:CONFIG_SENSITIVITY
Mouse sensitivity. The optional second parameter specifies vertical sensitivity (e.g. 100,-50).
.
:CONFIG_RAW_MOUSE_INPUT
Enable this setting to bypass your operating system's mouse
acceleration and sensitivity settings. This works in
fullscreen or when the mouse is captured in window mode.
.
:CONFIG_WAITONERROR
Wait before closing the console if dosbox has an error.
.
:CONFIG_PRIORITY
Priority levels for dosbox. Second entry behind the comma is for when dosbox is not focused/minimized.
pause is only valid for the second entry. auto disables priority levels and uses OS defaults
.
:CONFIG_MAPPERFILE
File used to load/save the key/event mappings from.
Resetmapper only works with the default value.
.
:CONFIG_SCREENSAVER
Use 'allow' or 'block' to override the SDL_VIDEO_ALLOW_SCREENSAVER
environment variable (which usually blocks the OS screensaver
while the emulator is running).
.
:CONFIG_LANGUAGE
Select a language to use: de, en, es, fr, it, pl, and ru
Notes: This setting will override the 'LANG' environment, if set.
       The 'resources/translations' directory bundled with the executable holds
       these files. Please keep it along-side the executable to support this feature.
.
:CONFIG_MACHINE
The type of machine DOSBox tries to emulate.
.
:CONFIG_CAPTURES
Directory where things like wave, midi, screenshot get captured.
.
:CONFIG_MEMSIZE
Amount of memory DOSBox has in megabytes.
This value is best left at its default to avoid problems with some games,
though few games might require a higher value.
There is generally no speed advantage when raising this value.
.
:CONFIG_VMEMSIZE
Video memory in MiB (1-8) or KiB (256 to 8192). 'auto' uses the default per video adapter.
.
:CONFIG_DOS_RATE
Customize the emulated video mode's frame rate, in Hz:
default:  The DOS video mode determines the rate (recommended).
host:     Match the DOS rate to the host rate (see 'host_rate' setting).
<value>:  Sets the rate to an exact value, between 24.000 and 1000.000 (Hz).
We recommend the 'default' rate; otherwise test and set on a per-game basis.
.
:CONFIG_VESA_MODES
Controls the selection of VESA 1.2 and 2.0 modes offered:
  compatible   A tailored selection that maximizes game compatibility.
               This is recommended along with 4 or 8 MB of video memory.
  all          Offers all modes for a given video memory size, however
               some games may not use them properly (flickering) or may need
               more system memory (mem = ) to use them.
.
:CONFIG_SPEED_MODS
Permit changes known to improve performance. Currently no games are known
to be affected by this. Please file a bug with the project if you find a
game that fails when this is set to true so we will list them here.
.
:CONFIG_AUTOEXEC_SECTION
How autoexec sections are handled from multiple config files.
join      : combines them into one big section (legacy behavior).
overwrite : use the last one encountered, like other conf settings.
.
:CONFIG_STARTUP_VERBOSITY
Controls verbosity prior to displaying the program:
Verbosity   | Splash | Welcome | Early stdout
high        |  yes   |   yes   |    yes
medium      |  no    |   yes   |    yes
low         |  no    |   no    |    yes
quiet       |  no    |   no    |    no
splash_only |  yes   |   no    |    no
auto        | 'low' if exec or dir is passed, otherwise 'high'
.
:CONFIG_FRAMESKIP
How many frames DOSBox skips before drawing one.
.
:CONFIG_ASPECT
Scales the vertical resolution to produce a 4:3 display aspect
ratio, matching that of the original standard-definition monitors
for which the majority of DOS games were designed. This setting
only affects video modes that use non-square pixels, such as
320x200 or 640x400; where as square-pixel modes, such as 640x480
and 800x600, will be displayed as-is.
.
:CONFIG_MONOCHROME_PALETTE
Select default palette for monochrome display.
Works only when emulating hercules or cga_mono.
You can also cycle through available colours using F11.
.
:CONFIG_SCALER
Scaler used to enlarge/enhance low resolution modes.
If 'forced' is appended, then the scaler will be used even if
the result might not be desired.
Note that some scalers may use black borders to fit the image
within your configured display resolution. If this is
undesirable, try either a different scaler or enabling
fullresolution output.
.
:CONFIG_GLSHADER
Either 'none' or a GLSL shader name. Works only with
OpenGL output.  Can be either an absolute path, a file
in the 'glshaders' subdirectory of the DOSBox
configuration directory, or one of the built-in shaders:
advinterp2x, advinterp3x, advmame2x, advmame3x,
crt-easymode-flat, crt-fakelottes-flat, rgb2x, rgb3x,
scan2x, scan3x, tv2x, tv3x, sharp (default).
.
:CONFIG_COMPOSITE
Enable composite mode on start. 'auto' lets the program decide.
Note: Fine-tune the settings below (ie: hue) using the composite hotkeys.
      Then read the new settings from your console and enter them here.
.
:CONFIG_ERA
Era of composite technology. When 'auto', PCjr uses new and CGA/Tandy use old.
.
:CONFIG_HUE
Appearance of RGB palette. For example, adjust until sky is blue.
.
:CONFIG_SATURATION
Intensity of colors, from washed out to vivid.
.
:CONFIG_CONTRAST
Ratio between the dark and light area.
.
:CONFIG_BRIGHTNESS
Luminosity of the image, from dark to light.
.
:CONFIG_CONVERGENCE
Convergence of subpixel elements, from blurry to sharp (CGA and Tandy-only).
.
:CONFIG_CORE
CPU Core used in emulation. auto will switch to dynamic if available and
appropriate.
.
:CONFIG_CPUTYPE
CPU Type used in emulation. auto is the fastest choice.
.
:CONFIG_CYCLES
Number of instructions DOSBox tries to emulate each millisecond.
Setting this value too high results in sound dropouts and lags.
Cycles can be set in 3 ways:
  'auto'          tries to guess what a game needs.
                  It usually works, but can fail for certain games.
  'fixed #number' will set a fixed number of cycles. This is what you usually
                  need if 'auto' fails (Example: fixed 4000).
  'max'           will allocate as much cycles as your computer is able to
                  handle.
.
:CONFIG_CYCLEUP
Number of cycles added or subtracted with speed control hotkeys.
Run INTRO and see Special Keys for list of hotkeys.
.
:CONFIG_CYCLEDOWN
Setting it lower than 100 will be a percentage.
.
:CONFIG_NOSOUND
Enable silent mode, sound is still emulated though.
.
:CONFIG_RATE
Mixer sample rate, setting any device's rate higher than this will probably lower their sound quality.
.
:CONFIG_BLOCKSIZE
Mixer block size, larger blocks might help sound stuttering but sound will also be more lagged.
.
:CONFIG_PREBUFFER
How many milliseconds of data to keep on top of the blocksize.
.
:CONFIG_NEGOTIATE
Let the system audio driver negotiate (possibly) better rate and blocksize settings.
.
:CONFIG_MIDIDEVICE
Device that will receive the MIDI data (from the emulated MIDI
interface - MPU-401). Choose one of the following:
'fluidsynth', to use the built-in MIDI synthesizer. See the
       [fluidsynth] section for detailed configuration.
'mt32', to use the built-in Roland MT-32 synthesizer.
       See the [mt32] section for detailed configuration.
'auto', to use the first working external MIDI player. This
       might be a software synthesizer or physical device.
.
:CONFIG_MIDICONFIG
Configuration options for the selected MIDI interface.
This is usually the id or name of the MIDI synthesizer you want
to use (find the id/name with DOS command 'mixer /listmidi').
- This option has no effect when using the built-in synthesizers
  (mididevice = fluidsynth or mt32).
- When using ALSA, use Linux command 'aconnect -l' to list open
  MIDI ports, and select one (for example 'midiconfig=14:0'
  for sequencer client 14, port 0).
- If you're using a physical Roland MT-32 with revision 0 PCB,
  the hardware may require a delay in order to prevent its
  buffer from overflowing. In that case, add 'delaysysex',
  for example: 'midiconfig=2 delaysysex'.
See the README/Manual for more details.
.
:CONFIG_MPU401
Type of MPU-401 to emulate.
.
:CONFIG_SOUNDFONT
Path to a SoundFont file in .sf2 format. You can use an
absolute or relative path, or the name of an .sf2 inside
the 'soundfonts' directory within your DOSBox configuration
directory.
An optional percentage will scale the SoundFont's volume.
For example: 'soundfont.sf2 50' will attenuate it by 50 percent.
The scaling percentage can range from 1 to 500.
.
:CONFIG_CHORUS
Chorus effect: 'auto', 'on', 'off', or custom values.
When using custom values:
  All five must be provided in-order and space-separated.
  They are: voice-count level speed depth modulation-wave, where:
  - voice-count is an integer from 0 to 99.
  - level is a decimal from 0.0 to 10.0
  - speed is a decimal, measured in Hz, from 0.1 to 5.0
  - depth is a decimal from 0.0 to 21.0
  - modulation-wave is either 'sine' or 'triangle'
  For example: chorus = 3 1.2 0.3 8.0 sine
.
:CONFIG_REVERB
Reverb effect: 'auto', 'on', 'off', or custom values.
When using custom values:
  All four must be provided in-order and space-separated.
  They are: room-size damping width level, where:
  - room-size is a decimal from 0.0 to 1.0
  - damping is a decimal from 0.0 to 1.0
  - width is a decimal from 0.0 to 100.0
  - level is a decimal from 0.0 to 1.0
  For example: reverb = 0.61 0.23 0.76 0.56
.
:CONFIG_MODEL
Model of synthesizer to use.
'auto' picks the first model with available ROMs, in order as listed.
'cm32l' and 'mt32' pick the first model of their type, in the order listed.
'mt32_old' and 'mt32_new' are aliases for 1.07 and 2.04, respectively.
.
:CONFIG_ROMDIR
The directory containing ROMs for one or more models.
The directory can be absolute or relative, or leave it blank to
use the 'mt32-roms' directory in your DOSBox configuration
directory. Other common system locations will be checked as well.
ROM files inside this directory may include any of the following:
  - MT32_CONTROL.ROM and MT32_PCM.ROM, for the 'mt32' model.
  - CM32L_CONTROL.ROM and CM32L_PCM.ROM, for the 'cm32l' model.
  - Unzipped MAME MT-32 and CM-32L ROMs, for the versioned models.
.
:CONFIG_SBTYPE
Type of Sound Blaster to emulate. 'gb' is Game Blaster.
.
:CONFIG_SBBASE
The IO address of the Sound Blaster.
.
:CONFIG_IRQ
The IRQ number of the Sound Blaster.
.
:CONFIG_DMA
The DMA number of the Sound Blaster.
.
:CONFIG_HDMA
The High DMA number of the Sound Blaster.
.
:CONFIG_SBMIXER
Allow the Sound Blaster mixer to modify the DOSBox mixer.
.
:CONFIG_SBWARMUP
Silence initial DMA audio after card power-on, in milliseconds.
This mitigates pops heard when starting many SB-based games.
Reduce this if you notice intial playback is missing audio.
.
:CONFIG_OPLRATE
oplrate is deprecated. The OPL waveform is now sampled
        at the mixer's playback rate to avoid resampling.
.
:CONFIG_OPLMODE
Type of OPL emulation. On 'auto' the mode is determined by 'sbtype'.
All OPL modes are AdLib-compatible, except for 'cms'.
.
:CONFIG_OPLEMU
Provider for the OPL emulation. 'compat' provides better quality,
'nuked' is the default and most accurate (but the most CPU-intensive).
.
:CONFIG_GUS
Enable Gravis UltraSound emulation.
.
:CONFIG_GUSBASE
The IO base address of the Gravis UltraSound.
.
:CONFIG_GUSIRQ
The IRQ number of the Gravis UltraSound.
.
:CONFIG_GUSDMA
The DMA channel of the Gravis UltraSound.
.
:CONFIG_ULTRADIR
Path to UltraSound directory. In this directory
there should be a MIDI directory that contains
the patch files for GUS playback. Patch sets used
with Timidity should work fine.
.
:CONFIG_SIDMODEL
Model of chip to emulate in the Innovation SSI-2001 card:
 - auto:  Selects the 6581 chip.
 - 6581:  The original chip, known for its bassy and rich character.
 - 8580:  A later revision that more closely matched the SID specification.
          It fixed the 6581's DC bias and is less prone to distortion.
          The 8580 is an option on reproduction cards, like the DuoSID.
 - none:  Disables the card.
.
:CONFIG_SIDCLOCK
The SID chip's clock frequency, which is jumperable on reproduction cards.
 - default: uses 0.895 MHz, per the original SSI-2001 card.
 - c64ntsc: uses 1.023 MHz, per NTSC Commodore PCs and the DuoSID.
 - c64pal:  uses 0.985 MHz, per PAL Commodore PCs and the DuoSID.
 - hardsid: uses 1.000 MHz, available on the DuoSID.
.
:CONFIG_SIDPORT
The IO port address of the Innovation SSI-2001.
.
:CONFIG_6581FILTER
The SID's analog filtering meant that each chip was physically unique.
Adjusts the 6581's filtering strength as a percent from 0 to 100.
.
:CONFIG_8580FILTER
Adjusts the 8580's filtering strength as a percent from 0 to 100.
.
:CONFIG_PCSPEAKER
Enable PC-Speaker emulation.
.
:CONFIG_PCRATE
Sample rate of the PC-Speaker sound generation.
.
:CONFIG_ZERO_OFFSET
Neutralizes and prevents the PC speaker's DC-offset from harming other sources.
'auto' enables this for non-Windows systems and disables it on Windows.
If your OS performs its own DC-offset correction, then set this to 'false'.
.
:CONFIG_TANDY
Enable Tandy Sound System emulation. For 'auto', emulation is present only if machine is set to 'tandy'.
.
:CONFIG_DISNEY
Enable Disney Sound Source emulation. (Covox Voice Master and Speech Thing compatible).
.
:CONFIG_PS1AUDIO
Enable IBM PS/1 Audio emulation.
.
:CONFIG_JOYSTICKTYPE
Type of joystick to emulate: auto (default),
auto     : Detect and use any joystick(s), if possible.,
2axis    : Support up to two joysticks.
4axis    : Support the first joystick only.
4axis_2  : Support the second joystick only.
fcs      : Support a Thrustmaster-type joystick.
ch       : Support a CH Flightstick-type joystick.
hidden   : Prevent DOS from seeing the joystick(s), but enable them for mapping.
disabled : Fully disable joysticks: won't be polled, mapped, or visible in DOS.
(Remember to reset DOSBox's mapperfile if you saved it earlier)
.
:CONFIG_TIMED
enable timed intervals for axis. Experiment with this option, if your joystick drifts (away).
.
:CONFIG_AUTOFIRE
continuously fires as long as you keep the button pressed.
.
:CONFIG_SWAP34
swap the 3rd and the 4th axis. Can be useful for certain joysticks.
.
:CONFIG_BUTTONWRAP
enable button wrapping at the number of emulated buttons.
.
:CONFIG_CIRCULARINPUT
enable translation of circular input to square output.
Try enabling this if your left analog stick can only move in a circle.
.
:CONFIG_DEADZONE
the percentage of motion to ignore. 100 turns the stick into a digital one.
.
:CONFIG_SERIAL1
set type of device connected to com port.
Can be disabled, dummy, modem, nullmodem, directserial.
Additional parameters must be in the same line in the form of
parameter:value. Parameter for all types is irq (optional).
for directserial: realport (required), rxdelay (optional).
                 (realport:COM1 realport:ttyS0).
for modem: listenport sock (all optional).
for nullmodem: server, rxdelay, txdelay, telnet, usedtr,
               transparent, port, inhsocket, sock (all optional).
SOCK parameter specifies the protocol to be used by both sides
     of the conection. 0 for TCP and 1 for ENet reliable UDP.
Example: serial1=modem listenport:5000 sock:1
.
:CONFIG_SERIAL2
see serial1
.
:CONFIG_SERIAL3
see serial1
.
:CONFIG_SERIAL4
see serial1
.
:CONFIG_PHONEBOOKFILE
File used to map fake phone numbers to addresses.
.
:CONFIG_XMS
Enable XMS support.
.
:CONFIG_EMS
Enable EMS support. The default (=true) provides the best
compatibility but certain applications may run better with
other choices, or require EMS support to be disabled (=false)
to work at all.
.
:CONFIG_UMB
Enable UMB support.
.
:CONFIG_VER
Set DOS version (5.0 by default). Specify as major.minor format.
A single number is treated as the major version.
Common settings are 3.3, 5.0, 6.22, and 7.1.
.
:CONFIG_COUNTRY
Set DOS country code which will affect country-specific
information such as date, time, and decimal formats.
If set to 0, the country code corresponding to the
selected keyboard layout will be used.
.
:CONFIG_KEYBOARDLAYOUT
Language code of the keyboard layout (or none).
.
:CONFIG_IPX
Enable ipx over UDP/IP emulation.
.
:CONFIG_NE2000
Enable emulation of a Novell NE2000 network card on a software-based
network (using libslirp) with properties as follows:
 - 255.255.255.0 : Subnet mask of the 10.0.2.0 virtual LAN.
 - 10.0.2.2      : IP of the gateway and DHCP service.
 - 10.0.2.3      : IP of the virtual DNS server.
 - 10.0.2.15     : First IP provided by DHCP, your IP!
Note: Inside DOS, setting this up requires an NE2000 packet driver,
      DHCP client, and TCP/IP stack. You might need port-forwarding
      from the host into the DOS guest, and from your router to your
      host when acting as the server for multiplayer games.
.
:CONFIG_NICBASE
The base address of the NE2000 card.
Note: Addresses 220 and 240 might not be available as they're assigned
      to the Sound Blaster and Gravis UltraSound by default.
.
:CONFIG_NICIRQ
The interrupt used by the NE2000 card.
Note: IRQs 3 and 5 might not be available as they're assigned
      to 'serial2' and the Gravis UltraSound by default.
.
:CONFIG_MACADDR
The MAC address of the NE2000 card.
.
:CONFIG_TCP_PORT_FORWARDS
Forwards one or more TCP ports from the host into the DOS guest.
The format is:
  port1  port2  port3 ... (e.g., 21 80 443)
  This will forward FTP, HTTP, and HTTPS into the DOS guest.
If the ports are privileged on the host, a mapping can be used
  host:guest  ..., (e.g., 8021:21 8080:80)
  This will forward ports 8021 and 8080 to FTP and HTTP in the guest
A range of adjacent ports can be abbreviated with a dash:
  start-end ... (e.g., 27910-27960)
  This will forward ports 27910 to 27960 into the DOS guest.
Mappings and ranges can be combined, too:
  hstart-hend:gstart-gend ..., (e.g, 8040-8080:20-60)
  This forwards ports 8040 to 8080 into 20 to 60 in the guest
Notes:
  - If mapped ranges differ, the shorter range is extended to fit.
  - If conflicting host ports are given, only the first one is setup.
  - If conflicting guest ports are given, the latter rule takes precedent.
.
:CONFIG_UDP_PORT_FORWARDS
Forwards one or more UDP ports from the host into the DOS guest.
The format is the same as for TCP port forwards.
.
:AUTOEXEC_CONFIGFILE_HELP
Lines in this section will be run at startup.
You can put your MOUNT lines here.

.
:CONFIGFILE_INTRO
# This is the configuration file for dosbox-staging (%s).
# Lines starting with a '#' character are comments.

.
:CONFIG_SUGGESTED_VALUES
Possible values
.
:PROGRAM_CONFIG_PROPERTY_ERROR
No such section or property: %s

.
:PROGRAM_CONFIG_NO_PROPERTY
There is no property "%s" in section "%s".

.
:PROGRAM_CONFIG_SET_SYNTAX
Correct syntax: config -set "[section] property=value".

.
:PROGRAM_CONFIG_NOCONFIGFILE
No config file loaded!

.
:PROGRAM_CONFIG_PRIMARY_CONF
Primary config file: 
%s

.
:PROGRAM_CONFIG_ADDITIONAL_CONF
Additional config files:

.
:PROGRAM_CONFIG_CONFDIR
DOSBox Staging %s configuration directory: 
%s


.
:PROGRAM_CONFIG_FILE_ERROR

Can't open file %s

.
:PROGRAM_CONFIG_FILE_WHICH
Writing config file %s

.
:PROGRAM_CONFIG_USAGE
Config tool:
-writeconf or -wc without parameter: write to primary loaded config file.
-writeconf or -wc with filename: write file to config directory.
Use -writelang or -wl filename to write the current language strings.
-r [parameters]
 Restart DOSBox, either using the previous parameters or any that are appended.
-wcp [filename]
 Write config file to the program directory, dosbox.conf or the specified
 filename.
-wcd
 Write to the default config file in the config directory.
-l lists configuration parameters.
-h, -help, -? sections / sectionname / propertyname
 Without parameters, displays this help screen. Add "sections" for a list of
 sections. For info about a specific section or property add its name behind.
-axclear clears the autoexec section.
-axadd [line] adds a line to the autoexec section.
-axtype prints the content of the autoexec section.
-securemode switches to secure mode.
-avistart starts AVI recording.
-avistop stops AVI recording.
-startmapper starts the keymapper.
-get "section property" returns the value of the property.
-set "section property=value" sets the value.

.
:PROGRAM_CONFIG_HLP_PROPHLP
Purpose of property "%s" (contained in section "%s"):
%s

Possible Values: %s
Default value: %s
Current value: %s

.
:PROGRAM_CONFIG_HLP_LINEHLP
Purpose of section "%s":
%s
Current value:
%s

.
:PROGRAM_CONFIG_HLP_NOCHANGE
This property cannot be changed at runtime.

.
:PROGRAM_CONFIG_HLP_POSINT
positive integer
.
:PROGRAM_CONFIG_HLP_SECTHLP
Section %s contains the following properties:

.
:PROGRAM_CONFIG_HLP_SECTLIST
DOSBox configuration contains the following sections:


.
:PROGRAM_CONFIG_SECURE_ON
Switched to secure mode.

.
:PROGRAM_CONFIG_SECURE_DISALLOW
This operation is not permitted in secure mode.

.
:PROGRAM_CONFIG_SECTION_ERROR
Section "%s" doesn't exist.

.
:PROGRAM_CONFIG_VALUE_ERROR
"%s" is not a valid value for property %s.

.
:PROGRAM_CONFIG_GET_SYNTAX
Correct syntax: config -get "section property".

.
:PROGRAM_CONFIG_PRINT_STARTUP

DOSBox was started with the following command line parameters:
%s

.
:PROGRAM_CONFIG_MISSINGPARAM
Missing parameter.

.
:PROGRAM_PATH_TOO_LONG
The path "%s" exceeds the DOS maximum length of %d characters

.
:PROGRAM_EXECUTABLE_MISSING
Executable file not found: %s

.
:PROGRAM_MOUNT_CDROMS_FOUND
CDROMs found: %d

.
:PROGRAM_MOUNT_STATUS_DRIVE
Drive
.
:PROGRAM_MOUNT_STATUS_TYPE
Type
.
:PROGRAM_MOUNT_STATUS_LABEL
Label
.
:PROGRAM_MOUNT_STATUS_NAME
Image name
.
:PROGRAM_MOUNT_STATUS_SLOT
Swap slot
.
:PROGRAM_MOUNT_STATUS_2
Drive %c is mounted as %s

.
:PROGRAM_MOUNT_STATUS_1
The currently mounted drives are:

.
:PROGRAM_MOUNT_ERROR_1
Directory %s doesn't exist.

.
:PROGRAM_MOUNT_ERROR_2
%s isn't a directory

.
:PROGRAM_MOUNT_ILL_TYPE
Illegal type %s

.
:PROGRAM_MOUNT_ALREADY_MOUNTED
Drive %c already mounted with %s

.
:PROGRAM_MOUNT_UMOUNT_NOT_MOUNTED
Drive %c isn't mounted.

.
:PROGRAM_MOUNT_UMOUNT_SUCCESS
Drive %c has successfully been removed.

.
:PROGRAM_MOUNT_UMOUNT_NO_VIRTUAL
Virtual Drives can not be unMOUNTed.

.
:PROGRAM_MOUNT_DRIVEID_ERROR
'%c' is not a valid drive identifier.

.
:PROGRAM_MOUNT_WARNING_WIN
[31;1mMounting c:\ is NOT recommended. Please mount a (sub)directory next time.[0m

.
:PROGRAM_MOUNT_WARNING_OTHER
[31;1mMounting / is NOT recommended. Please mount a (sub)directory next time.[0m

.
:PROGRAM_MOUNT_NO_OPTION
Warning: Ignoring unsupported option '%s'.

.
:PROGRAM_MOUNT_OVERLAY_NO_BASE
A normal directory needs to be MOUNTed first before an overlay can be added on top.

.
:PROGRAM_MOUNT_OVERLAY_INCOMPAT_BASE
The overlay is NOT compatible with the drive that is specified.

.
:PROGRAM_MOUNT_OVERLAY_MIXED_BASE
The overlay needs to be specified using the same addressing as the underlying drive. No mixing of relative and absolute paths.
.
:PROGRAM_MOUNT_OVERLAY_SAME_AS_BASE
The overlay directory can not be the same as underlying drive.

.
:PROGRAM_MOUNT_OVERLAY_GENERIC_ERROR
Something went wrong.

.
:PROGRAM_MOUNT_OVERLAY_STATUS
Overlay %s on drive %c mounted.

.
:PROGRAM_MOUNT_MOVE_Z_ERROR_1
Can't move drive Z. Drive %c is mounted already.

.
:SHELL_CMD_MEM_HELP_LONG
Displays the DOS memory information.

Usage:
  [32;1mmem[0m

Where:
  This command has no parameters.

Notes:
  This command shows the DOS memory status, including the free conventional
  memory, UMB (upper) memory, XMS (extended) memory, and EMS (expanded) memory.

Examples:
  [32;1mmem[0m

.
:PROGRAM_MEM_CONVEN
%10d kB free conventional memory

.
:PROGRAM_MEM_EXTEND
%10d kB free extended memory

.
:PROGRAM_MEM_EXPAND
%10d kB free expanded memory

.
:PROGRAM_MEM_UPPER
%10d kB free upper memory in %d blocks (largest UMB %d kB)

.
:SHELL_CMD_LOADFIX_HELP_LONG
Loads a program in the specific memory region and then runs it.

Usage:
  [32;1mloadfix[0m [36;1mGAME[0m [37;1m[PARAMETERS][0m
  [32;1mloadfix[0m [/d] (or [/f])[0m

Where:
  [36;1mGAME[0m is a game or program to be loaded, optionally with parameters.

Notes:
  The most common use cases of this command are to fix DOS games or programs
  which show either the "[37;1mPacked File Corrupt[0m" or "[37;1mNot enough memory"[0m (e.g.,
  from some 1980's games such as California Games II) error message when run.
  Running [32;1mloadfix[0m without an argument simply allocates memory for your game
  to run; you can free the memory with either /d or /f option when it finishes.

Examples:
  [32;1mloadfix[0m [36;1mmygame[0m [37;1margs[0m
  [32;1mloadfix[0m /d

.
:PROGRAM_LOADFIX_ALLOC
%d kB allocated.

.
:PROGRAM_LOADFIX_DEALLOC
%d kB freed.

.
:PROGRAM_LOADFIX_DEALLOCALL
Used memory freed.

.
:PROGRAM_LOADFIX_ERROR
Memory allocation error.

.
:SHELL_CMD_AUTOTYPE_HELP_LONG
Performs scripted keyboard entry into a running DOS game.

Usage:
  [32;1mautotype[0m -list
  [32;1mautotype[0m [-w [37;1mWAIT[0m] [-p [37;1mPACE[0m] [36;1mBUTTONS[0m

Where:
  [37;1mWAIT[0m    is the number of seconds to wait before typing begins (max of 30).
  [37;1mPACE[0m    is the number of seconds before each keystroke (max of 10).
  [36;1mBUTTONS[0m is one or more space-separated buttons.

Notes:
  The [36;1mBUTTONS[0m supplied in the command will be autotyped into running DOS games
  after they start. Autotyping begins after [36;1mWAIT[0m seconds, and each button is
  entered every [37;1mPACE[0m seconds. The [36;1m,[0m character inserts an extra [37;1mPACE[0m delay.
  [37;1mWAIT[0m and [37;1mPACE[0m default to 2 and 0.5 seconds respectively if not specified.
  A list of all available button names can be obtained using the -list option.

Examples:
  [32;1mautotype[0m -list
  [32;1mautotype[0m -w [37;1m1[0m -p [37;1m0.3[0m [36;1mup enter , right enter[0m
  [32;1mautotype[0m -p [37;1m0.2[0m [36;1mf1 kp_8 , , enter[0m
  [32;1mautotype[0m -w [37;1m1.3[0m [36;1mesc enter , p l a y e r enter
[0m
.
:SHELL_CMD_MIXER_HELP_LONG
Displays or changes the current sound mixer volumes.

Usage:
  [32;1mmixer[0m [36;1mCHANNEL[0m [37;1mVOLUME[0m [/noshow]
  [32;1mmixer[0m [/listmidi][0m

Where:
  [36;1mCHANNEL[0m is the sound channel you want to change the volume.
  [37;1mVOLUME[0m  is an integer between 0 and 100 representing the volume.

Notes:
  Running [32;1mmixer[0m without an argument shows the volumes of all sound channels.
  You can view available MIDI devices and user options with /listmidi option.
  You may change the volumes of more than one sound channels in one command.
  The /noshow option causes mixer not to show the volumes when making a change.

Examples:
  [32;1mmixer[0m
  [32;1mmixer[0m [36;1mmaster[0m [37;1m50[0m [36;1mrecord[0m [37;1m60[0m /noshow
  [32;1mmixer[0m /listmidi
.
:MSCDEX_SUCCESS
MSCDEX installed.

.
:MSCDEX_ERROR_MULTIPLE_CDROMS
MSCDEX: Failure: Drive-letters of multiple CD-ROM drives have to be continuous.

.
:MSCDEX_ERROR_NOT_SUPPORTED
MSCDEX: Failure: Not yet supported.

.
:MSCDEX_ERROR_PATH
MSCDEX: Specified location is not a CD-ROM drive.

.
:MSCDEX_ERROR_OPEN
MSCDEX: Failure: Invalid file or unable to open.

.
:MSCDEX_TOO_MANY_DRIVES
MSCDEX: Failure: Too many CD-ROM drives (max: 5). MSCDEX Installation failed.

.
:MSCDEX_LIMITED_SUPPORT
MSCDEX: Mounted subdirectory: limited support.

.
:MSCDEX_INVALID_FILEFORMAT
MSCDEX: Failure: File is either no ISO/CUE image or contains errors.

.
:MSCDEX_UNKNOWN_ERROR
MSCDEX: Failure: Unknown error.

.
:MSCDEX_WARNING_NO_OPTION
MSCDEX: Warning: Ignoring unsupported option '%s'.

.
:SHELL_CMD_RESCAN_HELP_LONG
Scans for changes on mounted DOS drives.

Usage:
  [32;1mrescan[0m [36;1mDRIVE[0m
  [32;1mrescan[0m [/a]

Where:
  [36;1mDRIVE[0m is the drive to scan for changes.

Notes:
  - Running [32;1mrescan[0m without an argument scans for changes of the current drive.
  - Changes to this drive made on the host will then be reflected inside DOS.
  - You can also scan for changes on all mounted drives with the /a option.

Examples:
  [32;1mrescan[0m [36;1mc:[0m
  [32;1mrescan[0m /a

.
:PROGRAM_RESCAN_SUCCESS
Drive re-scanned.

.
:PROGRAM_INTRO
[2J[32;1mWelcome to DOSBox Staging[0m, an x86 emulator with sound and graphics.
DOSBox creates a shell for you which looks like old plain DOS.

For information about basic mount type [34;1mintro mount[0m
For information about CD-ROM support type [34;1mintro cdrom[0m
For information about special keys type [34;1mintro special[0m
For more information, visit DOSBox Staging wiki:[34;1m
https://github.com/dosbox-staging/dosbox-staging/wiki[0m

[31;1mDOSBox will stop/exit without a warning if an error occurred![0m

.
:PROGRAM_INTRO_MOUNT_START
[2J[32;1mHere are some commands to get you started:[0m
Before you can use the files located on your own filesystem,
You have to mount the directory containing the files.


.
:PROGRAM_INTRO_MOUNT_WINDOWS
[44;1m╔═════════════════════════════════════════════════════════════════════════╗
║ [32mmount c c:\dosgames\[37m will create a C drive with c:\dosgames as contents.║
║                                                                         ║
║ [32mc:\dosgames\[37m is an example. Replace it with your own games directory.  [37m ║
╚═════════════════════════════════════════════════════════════════════════╝[0m

.
:PROGRAM_INTRO_MOUNT_OTHER
[44;1m╔══════════════════════════════════════════════════════════════════════╗
║ [32mmount c ~/dosgames[37m will create a C drive with ~/dosgames as contents.║
║                                                                      ║
║ [32m~/dosgames[37m is an example. Replace it with your own games directory.[37m  ║
╚══════════════════════════════════════════════════════════════════════╝[0m

.
:PROGRAM_INTRO_MOUNT_END
After successfully mounting the disk you can type [34;1mc:[0m to go to your freshly
mounted C-drive. Typing [34;1mdir[0m there will show its contents. [34;1mcd[0m will allow you to
enter a directory (recognised by the [33;1m[][0m in a directory listing).
You can run programs/files with extensions [31m.exe .bat[0m and [31m.com[0m.

.
:PROGRAM_INTRO_CDROM_WINDOWS
[2J[32;1mHow to mount a real/virtual CD-ROM Drive in DOSBox:[0m
DOSBox provides CD-ROM emulation on two levels.

The [33mbasic[0m level works on all normal directories, which installs MSCDEX
and marks the files read-only. Usually this is enough for most games:
[34;1mmount D C:\example -t cdrom[0m
If it doesn't work you might have to tell DOSBox the label of the CD-ROM:
[34;1mmount D C:\example -t cdrom -label CDLABEL[0m

The [33mnext[0m level adds some low-level support.
Therefore only works on CD-ROM drives:
[34;1mmount d [0;31mD:\[34;1m -t cdrom -usecd [33m0[0m
Replace [0;31mD:\[0m with the location of your CD-ROM.
Replace the [33;1m0[0m in [34;1m-usecd [33m0[0m with the number reported for your CD-ROM if you type:
[34;1mmount -listcd[0m

Additionally, you can use imgmount to mount iso or cue/bin images:
[34;1mimgmount D C:\cd.iso -t cdrom[0m
[34;1mimgmount D C:\cd.cue -t cdrom[0m

.
:PROGRAM_INTRO_CDROM_OTHER
[2J[32;1mHow to mount a real/virtual CD-ROM Drive in DOSBox:[0m
DOSBox provides CD-ROM emulation on two levels.

The [33mbasic[0m level works on all normal directories, which installs MSCDEX
and marks the files read-only. Usually this is enough for most games:
[34;1mmount D ~/example -t cdrom[0m
If it doesn't work you might have to tell DOSBox the label of the CD-ROM:
[34;1mmount D ~/example -t cdrom -label CDLABEL[0m

The [33mnext[0m level adds some low-level support.
Therefore only works on CD-ROM drives:
[34;1mmount d [0;31m~/example[34;1m -t cdrom -usecd [33m0[0m

Replace [0;31m~/example[0m with the location of your CD-ROM.
Replace the [33;1m0[0m in [34;1m-usecd [33m0[0m with the number reported for your CD-ROM if you type:
[34;1mmount -listcd[0m

Additionally, you can use imgmount to mount iso or cue/bin images:
[34;1mimgmount D ~/cd.iso -t cdrom[0m
[34;1mimgmount D ~/cd.cue -t cdrom[0m

.
:PROGRAM_INTRO_SPECIAL
[2J[32;1mSpecial keys:[0m
These are the default keybindings.
They can be changed in the [33mkeymapper[0m.

[33;1m%s+Enter[0m  Switch between fullscreen and window mode.
[33;1m%s+Pause[0m  Pause/Unpause emulator.
[33;1m%s+F1[0m   %s Start the [33mkeymapper[0m.
[33;1m%s+F4[0m   %s Swap mounted disk image, scan for changes on all drives.
[33;1m%s+F5[0m   %s Save a screenshot.
[33;1m%s+F6[0m   %s Start/Stop recording sound output to a wave file.
[33;1m%s+F7[0m   %s Start/Stop recording video output to a zmbv file.
[33;1m%s+F9[0m   %s Shutdown emulator.
[33;1m%s+F10[0m  %s Capture/Release the mouse.
[33;1m%s+F11[0m  %s Slow down emulation.
[33;1m%s+F12[0m  %s Speed up emulation.
[33;1m%s+F12[0m    Unlock speed (turbo button/fast forward).

.
:SHELL_CMD_BOOT_HELP_LONG
Boots DOSBox Staging from a DOS drive or disk image.

Usage:
  [32;1mboot[0m [37;1mDRIVE[0m
  [32;1mboot[0m [36;1mIMAGEFILE[0m

Where:
  [37;1mDRIVE[0m is a drive to boot from, must be [37;1mA:[0m, [37;1mC:[0m, or [37;1mD:[0m.
  [36;1mIMAGEFILE[0m is one or more floppy images, separated by spaces.

Notes:
  A DOS drive letter must have been mounted previously with [32;1mimgmount[0m command.
  The DOS drive or disk image must be bootable, containing DOS system files.
  If more than one disk images are specified, you can swap them with a hotkey.

Examples:
  [32;1mboot[0m [37;1mc:[0m
  [32;1mboot[0m [36;1mdisk1.ima disk2.ima[0m

.
:PROGRAM_BOOT_NOT_EXIST
Bootdisk file does not exist.  Failing.

.
:PROGRAM_BOOT_NOT_OPEN
Cannot open bootdisk file.  Failing.

.
:PROGRAM_BOOT_WRITE_PROTECTED
Image file is read-only! Might create problems.

.
:PROGRAM_BOOT_PRINT_ERROR
This command boots DOSBox Staging from either a floppy or hard disk image.

For this command, one can specify a succession of floppy disks swappable
by pressing %s+F4, and -l specifies the mounted drive to boot from.  If
no drive letter is specified, this defaults to booting from the A drive.
The only bootable drive letters are A, C, and D.  For booting from a hard
drive (C or D), the image should have already been mounted using the
[34;1mIMGMOUNT[0m command.

Type [34;1mBOOT /?[0m for the syntax of this command.[0m

.
:PROGRAM_BOOT_UNABLE
Unable to boot off of drive %c
.
:PROGRAM_BOOT_IMAGE_OPEN
Opening image file: %s

.
:PROGRAM_BOOT_IMAGE_NOT_OPEN
Cannot open %s
.
:PROGRAM_BOOT_BOOT
Booting from drive %c...

.
:PROGRAM_BOOT_CART_WO_PCJR
PCjr cartridge found, but machine is not PCjr
.
:PROGRAM_BOOT_CART_LIST_CMDS
Available PCjr cartridge commands: %s
.
:PROGRAM_BOOT_CART_NO_CMDS
No PCjr cartridge commands found
.
:SHELL_CMD_LOADROM_HELP_LONG
Loads a ROM image of the video BIOS or IBM BASIC.

Usage:
  [32;1mloadrom [36;1mIMAGEFILE[0m

Where:
  [36;1mIMAGEFILE[0m is a video BIOS or IBM BASIC ROM image.

Notes:
   After loading an IBM BASIC ROM image into the emulated ROM with the command,
   you can run the original IBM BASIC interpreter program in DOSBox Staging.

Examples:
  [32;1mloadrom[0m [36;1mbios.rom[0m

.
:PROGRAM_LOADROM_SPECIFY_FILE
Must specify ROM file to load.

.
:PROGRAM_LOADROM_CANT_OPEN
ROM file not accessible.

.
:PROGRAM_LOADROM_TOO_LARGE
ROM file too large.

.
:PROGRAM_LOADROM_INCOMPATIBLE
Video BIOS not supported by machine type.

.
:PROGRAM_LOADROM_UNRECOGNIZED
ROM file not recognized.

.
:PROGRAM_LOADROM_BASIC_LOADED
BASIC ROM loaded.

.
:SHELL_CMD_IMGMOUNT_HELP
mounts compact disc image(s) or floppy disk image(s) to a given drive letter.

.
:SHELL_CMD_IMGMOUNT_HELP_LONG
Mount a CD-ROM, floppy, or disk image to a drive letter.

Usage:
  [32;1mimgmount[0m [37;1mDRIVE[0m [36;1mCDROM-SET[0m [-fs iso] [-ide] -t cdrom|iso
  [32;1mimgmount[0m [37;1mDRIVE[0m [36;1mIMAGEFILE[0m [IMAGEFILE2 [..]] [-fs fat] -t hdd|floppy -ro
  [32;1mimgmount[0m [37;1mDRIVE[0m [36;1mBOOTIMAGE[0m [-fs fat|none] -t hdd -size GEOMETRY -ro
  [32;1mimgmount[0m -u [37;1mDRIVE[0m  (unmounts the [37;1mDRIVE[0m's image)

Where:
  [37;1mDRIVE[0m     is the drive letter where the image will be mounted: a, c, d, ...
  [36;1mCDROM-SET[0m is an ISO, CUE+BIN, CUE+ISO, or CUE+ISO+FLAC/OPUS/OGG/MP3/WAV
  [36;1mIMAGEFILE[0m is a hard drive or floppy image in FAT16 or FAT12 format
  [36;1mBOOTIMAGE[0m is a bootable disk image with specified -size GEOMETRY:
            bytes-per-sector,sectors-per-head,heads,cylinders
Notes:
  - %s+F4 swaps & mounts the next [36;1mCDROM-SET[0m or [36;1mBOOTIMAGE[0m, if provided.
  - The -ro flag mounts the disk image in read-only (write-protected) mode.
  - The -ide flag emulates an IDE controller with attached IDE CD drive, useful
    for CD-based games that need a real DOS environment via bootable HDD image.
Examples:
  [32;1mimgmount[0m [37;1mD[0m [36;1m/home/USERNAME/games/doom.iso[0m -t cdrom
  [32;1mimgmount[0m [37;1mD[0m [36;1mcd/quake1.cue[0m -t cdrom
  [32;1mimgmount[0m [37;1mA[0m [36;1mfloppy1.img floppy2.img floppy3.img[0m -t floppy -ro
  [32;1mimgmount[0m [37;1mC[0m [36;1mbootable.img[0m -t hdd -fs none -size 512,63,32,1023

.
:SHELL_CMD_MOUNT_HELP
maps physical folders or drives to a virtual drive letter.

.
:SHELL_CMD_MOUNT_HELP_LONG
Mount a directory from the host OS to a drive letter.

Usage:
  [32;1mmount[0m [37;1mDRIVE[0m [36;1mDIRECTORY[0m [-t TYPE] [-usecd #] [-freesize SIZE] [-label LABEL]
  [32;1mmount[0m -listcd / -cd (lists all detected CD-ROM drives and their numbers)
  [32;1mmount[0m -u [37;1mDRIVE[0m  (unmounts the DRIVE's directory)

Where:
  [37;1mDRIVE[0m     the drive letter where the directory will be mounted: A, C, D, ...
  [36;1mDIRECTORY[0m is the directory on the host OS to be mounted
  TYPE      type of the directory to mount: dir, floppy, cdrom, or overlay
  SIZE      free space for the virtual drive (KiB for floppies, MiB otherwise)
  LABEL     drive label name to be used

Notes:
  - '-t overlay' redirects writes for mounted drive to another directory.
  - Additional options are described in the manual (README file, chapter 4).

Examples:
  [32;1mmount[0m [37;1mC[0m [36;1m~/dosgames[0m
  [32;1mmount[0m [37;1mD[0m [36;1m"/media/USERNAME/Game CD"[0m -t cdrom
  [32;1mmount[0m [37;1mC[0m [36;1mmy_savegame_files[0m -t overlay

.
:PROGRAM_IMGMOUNT_STATUS_1
The currently mounted disk and CD image drives are:

.
:PROGRAM_IMGMOUNT_SPECIFY_DRIVE
Must specify drive letter to mount image at.

.
:PROGRAM_IMGMOUNT_SPECIFY2
Must specify drive number (0 or 3) to mount image at (0,1=fda,fdb;2,3=hda,hdb).

.
:PROGRAM_IMGMOUNT_SPECIFY_GEOMETRY
For [33mCD-ROM[0m images:   [34;1mIMGMOUNT drive-letter location-of-image -t iso[0m

For [33mhardrive[0m images: Must specify drive geometry for hard drives:
bytes_per_sector, sectors_per_cylinder, heads_per_cylinder, cylinder_count.
[34;1mIMGMOUNT drive-letter location-of-image -size bps,spc,hpc,cyl[0m

.
:PROGRAM_IMGMOUNT_STATUS_NONE
No drive available

.
:PROGRAM_IMGMOUNT_IDE_CONTROLLERS_UNAVAILABLE
No available IDE controllers. Drive will not have IDE emulation.

.
:PROGRAM_IMGMOUNT_INVALID_IMAGE
Could not load image file.
Check that the path is correct and the image is accessible.

.
:PROGRAM_IMGMOUNT_INVALID_GEOMETRY
Could not extract drive geometry from image.
Use parameter -size bps,spc,hpc,cyl to specify the geometry.

.
:PROGRAM_IMGMOUNT_TYPE_UNSUPPORTED
Type '%s' is unsupported. Specify 'floppy', 'hdd', 'cdrom', or 'iso'.

.
:PROGRAM_IMGMOUNT_FORMAT_UNSUPPORTED
Format "%s" is unsupported. Specify "fat" or "iso" or "none".

.
:PROGRAM_IMGMOUNT_SPECIFY_FILE
Must specify file-image to mount.

.
:PROGRAM_IMGMOUNT_FILE_NOT_FOUND
Image file not found.

.
:PROGRAM_IMGMOUNT_MOUNT
To mount directories, use the [34;1mMOUNT[0m command, not the [34;1mIMGMOUNT[0m command.

.
:PROGRAM_IMGMOUNT_ALREADY_MOUNTED
Drive already mounted at that letter.

.
:PROGRAM_IMGMOUNT_CANT_CREATE
Can't create drive from file.

.
:PROGRAM_IMGMOUNT_MOUNT_NUMBER
Drive number %d mounted as %s

.
:PROGRAM_IMGMOUNT_NON_LOCAL_DRIVE
The image must be on a host or local drive.

.
:PROGRAM_IMGMOUNT_MULTIPLE_NON_CUEISO_FILES
Using multiple files is only supported for cue/iso images.

.
:PROGRAM_KEYB_INFO
Codepage %i has been loaded

.
:PROGRAM_KEYB_INFO_LAYOUT
Codepage %i has been loaded for layout %s

.
:PROGRAM_KEYB_HELP_LONG
Configures a keyboard for a specific language.

Usage:
  [32;1mkeyb[0m [36;1m[LANGCODE][0m
  [32;1mkeyb[0m [36;1mLANGCODE[0m [37;1mCODEPAGE[0m [CODEPAGEFILE]

Where:
  [36;1mLANGCODE[0m     is a language code or keyboard layout ID.
  [37;1mCODEPAGE[0m     is a code page number, such as [37;1m437[0m and [37;1m850[0m.
  CODEPAGEFILE is a file containing information for a code page.

Notes:
  Running [32;1mkeyb[0m without an argument shows the currently loaded keyboard layout
  and code page. It will change to [36;1mLANGCODE[0m if provided, optionally with a
  [37;1mCODEPAGE[0m and an additional CODEPAGEFILE to load the specified code page
  number and code page file if provided. This command is especially useful if
  you use a non-US keyboard, and [36;1mLANGCODE[0m can also be set in the configuration
  file under the [dos] section using the "keyboardlayout = [36;1mLANGCODE[0m" setting.

Examples:
  [32;1mKEYB[0m
  [32;1mKEYB[0m [36;1muk[0m
  [32;1mKEYB[0m [36;1msp[0m [37;1m850[0m
  [32;1mKEYB[0m [36;1mde[0m [37;1m858[0m mycp.cpi

.
:PROGRAM_KEYB_NOERROR
Keyboard layout %s loaded for codepage %i

.
:PROGRAM_KEYB_FILENOTFOUND
Keyboard file %s not found


.
:PROGRAM_KEYB_INVALIDFILE
Keyboard file %s invalid

.
:PROGRAM_KEYB_LAYOUTNOTFOUND
No layout in %s for codepage %i

.
:PROGRAM_KEYB_INVCPFILE
None or invalid codepage file for layout %s


.
:PROGRAM_SERIAL_HELP
Manages the serial ports.

Usage:
  [32;1mserial[0m [37;1m[PORT#][0m                List all or specified serial ports.
  [32;1mserial[0m [37;1mPORT#[0m [36;1mTYPE[0m [settings]  Set the specified port to the given type.

Where:
  [37;1mPORT#[0m The port number: [37;1m1[0m, [37;1m2[0m, [37;1m3[0m, or [37;1m4[0m
  [36;1mTYPE[0m  The port type: [36;1mMODEM[0m, [36;1mNULLMODEM[0m, [36;1mDIRECTSERIAL[0m, [36;1mDUMMY[0m, or [36;1mDISABLED[0m

Notes:
  Optional settings for each [36;1mTYPE[0m:
  For [36;1mMODEM[0m        : IRQ, LISTENPORT, SOCK
  For [36;1mNULLMODEM[0m    : IRQ, SERVER, RXDELAY, TXDELAY, TELNET,
                     USEDTR, TRANSPARENT, PORT, INHSOCKET, SOCK
  For [36;1mDIRECTSERIAL[0m : IRQ, REALPORT (required), RXDELAY
  For [36;1mDUMMY[0m        : IRQ

Examples:
  [32;1mSERIAL[0m                                       : List the current serial ports
  [32;1mSERIAL[0m [37;1m1[0m [36;1mNULLMODEM[0m PORT:1250                 : Listen on TCP:1250 as server
  [32;1mSERIAL[0m [37;1m2[0m [36;1mNULLMODEM[0m SERVER:10.0.0.6 PORT:1250 : Connect to TCP:1250 as client
  [32;1mSERIAL[0m [37;1m3[0m [36;1mMODEM[0m LISTENPORT:5000 SOCK:1        : Listen on UDP:5000 as server
  [32;1mSERIAL[0m [37;1m4[0m [36;1mDIRECTSERIAL[0m REALPORT:ttyUSB0       : Use a physical port on Linux

.
:PROGRAM_SERIAL_SHOW_PORT
COM%d: %s %s

.
:PROGRAM_SERIAL_BAD_PORT
Must specify a numeric port value between 1 and %d, inclusive.

.
:PROGRAM_SERIAL_BAD_TYPE
Type must be one of the following:

.
:PROGRAM_SERIAL_INDENTED_LIST
  %s

.
:PROGRAM_PLACEHOLDER_SHORT_HELP
This program is a placeholder
.
:PROGRAM_PLACEHOLDER_LONG_HELP
%s is only a placeholder.

Install a 3rd-party and give its PATH precedence.

For example:
.
:UTILITY_DRIVE_EXAMPLE_NO_TRANSLATE

   [autoexec]
   mount u ~/dos/utils
   set PATH=u:\;%PATH%


.
:VISIT_FOR_MORE_HELP
Visit the following for more help:
.
:WIKI_ADD_UTILITIES_ARTICLE
https://github.com/dosbox-staging/dosbox-staging/wiki/Add-Utilities
.
:WIKI_URL
https://github.com/dosbox-staging/dosbox-staging/wiki
.
:SHELL_ILLEGAL_PATH
Illegal Path.

.
:SHELL_CMD_HELP
If you want a list of all supported commands type [33;1mhelp /all[0m .
A short list of the most often used commands:

.
:SHELL_CMD_COMMAND_HELP_LONG
Starts the DOSBox Staging command shell.
Usage:
  [32;1mcommand[0m
  [32;1mcommand[0m /c (or /init) [36;1mCOMMAND[0m

Where:
  [36;1mCOMMAND[0m is a DOS command, game, or program to run.

Notes:
  DOSBox Staging automatically starts a DOS command shell by invoking this
  command with /init option when it starts, which shows the welcome banner.
  You can load a new instance of the command shell by running [32;1mcommand[0m.
  Adding a /c option along with [36;1mCOMMAND[0m allows this command to run the
  specified command (optionally with parameters) and then exit automatically.

Examples:
  [32;1mcommand[0m
  [32;1mcommand[0m /c [36;1mecho[0m [37;1mHello world![0m
  [32;1mcommand[0m /init [36;1mdir[0m

.
:SHELL_CMD_ECHO_ON
ECHO is on.

.
:SHELL_CMD_ECHO_OFF
ECHO is off.

.
:SHELL_ILLEGAL_SWITCH
Illegal switch: %s.

.
:SHELL_MISSING_PARAMETER
Required parameter missing.

.
:SHELL_CMD_CHDIR_ERROR
Unable to change to: %s.

.
:SHELL_CMD_CHDIR_HINT
Hint: To change to different drive type [31m%c:[0m

.
:SHELL_CMD_CHDIR_HINT_2
directoryname is longer than 8 characters and/or contains spaces.
Try [31mcd %s[0m

.
:SHELL_CMD_CHDIR_HINT_3
You are still on drive Z:, change to a mounted drive with [31mC:[0m.

.
:SHELL_CMD_DATE_HELP
Displays or changes the internal date.

.
:SHELL_CMD_DATE_ERROR
The specified date is not correct.

.
:SHELL_CMD_DATE_DAYS
3SunMonTueWedThuFriSat
.
:SHELL_CMD_DATE_NOW
Current date: 
.
:SHELL_CMD_DATE_SETHLP
Type 'date %s' to change.

.
:SHELL_CMD_DATE_HELP_LONG
Usage:
  [32;1mdate[0m [/t]
  [32;1mdate[0m /h
  [32;1mdate[0m [36;1mDATE[0m

Where:
  [36;1mDATE[0m is the new date to set to, in the format of [36;1m%s[0m.

Notes:
  Running [32;1mdate[0m without an argument shows the current date, or only a date
  with the /t option. You can force a date synchronization of with the host
  system with the /h option, or manually specify a new date to set to.

Examples:
  [32;1mdate[0m
  [32;1mdate[0m /h
  [32;1mdate[0m [36;1m%s[0m

.
:SHELL_CMD_TIME_HELP
Displays or changes the internal time.

.
:SHELL_CMD_TIME_ERROR
The specified time is not correct.

.
:SHELL_CMD_TIME_NOW
Current time: 
.
:SHELL_CMD_TIME_SETHLP
Type 'time %s' to change.

.
:SHELL_CMD_TIME_HELP_LONG
Usage:
  [32;1mtime[0m [/t]
  [32;1mtime[0m /h
  [32;1mtime[0m [36;1mTIME[0m

Where:
  [36;1mTIME[0m is the new time to set to, in the format of [36;1m%s[0m.

Notes:
  Running [32;1mtime[0m without an argument shows the current time, or a simple time
  with the /t option. You can force a time synchronization of with the host
  system with the /h option, or manually specify a new time to set to.

Examples:
  [32;1mtime[0m
  [32;1mtime[0m /h
  [32;1mtime[0m [36;1m%s[0m

.
:SHELL_CMD_MKDIR_ERROR
Unable to make: %s.

.
:SHELL_CMD_RMDIR_ERROR
Unable to remove: %s.

.
:SHELL_CMD_DEL_ERROR
Unable to delete: %s.

.
:SHELL_SYNTAXERROR
The syntax of the command is incorrect.

.
:SHELL_CMD_SET_NOT_SET
Environment variable %s not defined.

.
:SHELL_CMD_SET_OUT_OF_SPACE
Not enough environment space left.

.
:SHELL_CMD_IF_EXIST_MISSING_FILENAME
IF EXIST: Missing filename.

.
:SHELL_CMD_IF_ERRORLEVEL_MISSING_NUMBER
IF ERRORLEVEL: Missing number.

.
:SHELL_CMD_IF_ERRORLEVEL_INVALID_NUMBER
IF ERRORLEVEL: Invalid number.

.
:SHELL_CMD_GOTO_MISSING_LABEL
No label supplied to GOTO command.

.
:SHELL_CMD_GOTO_LABEL_NOT_FOUND
GOTO: Label %s not found.

.
:SHELL_CMD_FILE_ACCESS_DENIED
Access denied - %s

.
:SHELL_CMD_DUPLICATE_REDIRECTION
Duplicate redirection - %s

.
:SHELL_CMD_FAILED_PIPE

Failed to create/open a temporary file for piping. Check the %%TEMP%% variable.

.
:SHELL_CMD_FILE_CREATE_ERROR
File creation error - %s

.
:SHELL_CMD_FILE_OPEN_ERROR
File open error - %s

.
:SHELL_CMD_FILE_NOT_FOUND
File not found: %s

.
:SHELL_CMD_FILE_EXISTS
File %s already exists.

.
:SHELL_CMD_DIR_VOLUME
 Volume in drive %c is %s

.
:SHELL_CMD_DIR_INTRO
 Directory of %s

.
:SHELL_CMD_DIR_BYTES_USED
%17d file(s) %21s bytes

.
:SHELL_CMD_DIR_BYTES_FREE
%17d dir(s)  %21s bytes free

.
:SHELL_EXECUTE_DRIVE_NOT_FOUND
Drive %c does not exist!
You must [31mmount[0m it first. Type [1;33mintro[0m or [1;33mintro mount[0m for more information.

.
:SHELL_EXECUTE_ILLEGAL_COMMAND
Illegal command: %s.

.
:SHELL_CMD_PAUSE
Press a key to continue...
.
:SHELL_CMD_PAUSE_HELP
Waits for a keystroke to continue.

.
:SHELL_CMD_PAUSE_HELP_LONG
Usage:
  [32;1mpause[0m

Where:
  This command has no parameters.

Notes:
  This command is especially useful in batch programs to allow a user to
  continue the batch program execution with a key press. The user can press
  any key on the keyboard (except for certain control keys) to continue.

Examples:
  [32;1mpause[0m

.
:SHELL_CMD_COPY_FAILURE
Copy failure : %s.

.
:SHELL_CMD_COPY_SUCCESS
   %d File(s) copied.

.
:SHELL_CMD_SUBST_NO_REMOVE
Unable to remove, drive not in use.

.
:SHELL_CMD_SUBST_FAILURE
SUBST failed. You either made an error in your commandline or the target drive is already used.
It's only possible to use SUBST on Local drives
.
:SHELL_STARTUP_BEGIN
[44;1m╔════════════════════════════════════════════════════════════════════╗
║ [32mWelcome to DOSBox Staging %-40s[37m ║
║                                                                    ║
║ For a short introduction for new users type: [33mINTRO[37m                 ║
║ For supported shell commands type: [33mHELP[37m                            ║
║                                                                    ║
║ To adjust the emulated CPU speed, use [31m%s+F11[37m and [31m%s+F12[37m.%s%s       ║
║ To activate the keymapper [31m%s+F1[37m.%s                                 ║
║ For more information read the [36mREADME[37m file in the DOSBox directory. ║
║                                                                    ║

.
:SHELL_STARTUP_CGA
║ DOSBox supports Composite CGA mode.                                ║
║ Use [31mF12[37m to set composite output ON, OFF, or AUTO (default).        ║
║ [31mF10[37m selects the CGA settings to change and [31m(%s+)F11[37m changes it.   ║
║                                                                    ║

.
:SHELL_STARTUP_CGA_MONO
║ Use [31mF11[37m to cycle through green, amber, white and paper-white mode, ║
║ and [31m%s+F11[37m to change contrast/brightness settings.                ║

.
:SHELL_STARTUP_HERC
║ Use [31mF11[37m to cycle through white, amber, and green monochrome color. ║
║                                                                    ║

.
:SHELL_STARTUP_DEBUG
║ Press [31m%s+Pause[37m to enter the debugger or start the exe with [33mDEBUG[37m. ║
║                                                                    ║

.
:SHELL_STARTUP_END
║ [33mhttps://dosbox-staging.github.io[37m                                   ║
╚════════════════════════════════════════════════════════════════════╝[0m


.
:SHELL_STARTUP_SUB
[32;1mdosbox-staging %s[0m

.
:SHELL_CMD_CHDIR_HELP
Displays or changes the current directory.

.
:SHELL_CMD_CHDIR_HELP_LONG
Usage:
  [32;1mcd[0m [36;1mDIRECTORY[0m
  [32;1mchdir[0m [36;1mDIRECTORY[0m

Where:
  [36;1mDIRECTORY[0m is the name of the directory to change to.

Notes:
  Running [32;1mcd[0m without an argument displays the current directory.
  With [36;1mDIRECTORY[0m the command only changes the directory, not the current drive.

Examples:
  [32;1mcd[0m
  [32;1mcd[0m [36;1mmydir[0m

.
:SHELL_CMD_CLS_HELP
Clears the DOS screen.

.
:SHELL_CMD_CLS_HELP_LONG
Usage:
  [32;1mcls[0m

Where:
  This command has no parameters.

Notes:
  Running [32;1mcls[0m clears all texts on the DOS screen, except for the command
  prompt (e.g. [37;1mZ:\>[0m or [37;1mC:\GAMES>[0m) on the top-left corner of the screen.

Examples:
  [32;1mcls[0m

.
:SHELL_CMD_DIR_HELP
Displays a list of files and subdirectories in a directory.

.
:SHELL_CMD_DIR_HELP_LONG
Usage:
  [32;1mdir[0m [36;1m[PATTERN][0m [/w] [22m [/p] [ad] [a-d] [/o[37;1mORDER[0m]

Where:
  [36;1mPATTERN[0m is either an exact filename or an inexact filename with wildcards,
          which are the asterisk (*) and the question mark (?). A path can be
          specified in the pattern to list contents in the specified directory.
  [37;1mORDER[0m   is a listing order, including [37;1mn[0m (by name, alphabetic), [37;1ms[0m (by size,
          smallest first), [37;1me[0m (by extension, alphabetic), [37;1md[0m (by date/time,
          oldest first), with an optional [37;1m-[0m prefix to reverse order.
  /w      lists 5 files/directories in a row; /b      lists the names only.
  /o[37;1mORDER[0m orders the list (see above)         /p      pauses after each screen.
  /ad     lists all directories;              /a-d    lists all files.

Notes:
  Running [32;1mdir[0m without an argument lists all files and subdirectories in the
  current directory, which is the same as [32;1mdir[0m [36;1m*.*[0m.

Examples:
  [32;1mdir[0m [36;1m[0m
  [32;1mdir[0m [36;1mgames.*[0m /p
  [32;1mdir[0m [36;1mc:\games\*.exe[0m /b /o[37;1m-d[0m

.
:SHELL_CMD_ECHO_HELP
Displays messages and enables/disables command echoing.

.
:SHELL_CMD_ECHO_HELP_LONG
Usage:
  [32;1mecho[0m [36;1m[on|off][0m
  [32;1mecho[0m [36;1m[MESSAGE][0m

Where:
  [36;1mon|off[0m  Turns on/off command echoing.
  [36;1mMESSAGE[0m The message to display.

Notes:
  - Running [32;1mecho[0m without an argument shows the current on or off status.
  - Echo is especially useful when writing or debugging batch files.

Examples:
  [32;1mecho[0m [36;1moff[0m
  [32;1mecho[0m [36;1mHello world![0m

.
:SHELL_CMD_EXIT_HELP
Exits from the DOS shell.

.
:SHELL_CMD_EXIT_HELP_LONG
Usage:
  [32;1mexit[0m

Where:
  This command has no parameters.

Notes:
  If you start a DOS shell from a program, running [32;1mexit[0m returns to the program.
  If there is no DOS program running, the command quits from DOSBox Staging.

Examples:
  [32;1mexit[0m

.
:SHELL_CMD_EXIT_TOO_SOON
Preventing an early 'exit' call from terminating.

.
:SHELL_CMD_HELP_HELP
Displays help information for DOS commands.

.
:SHELL_CMD_HELP_HELP_LONG
Usage:
  [32;1mhelp[0m
  [32;1mhelp[0m /a[ll]
  [32;1mhelp[0m [36;1mCOMMAND[0m

Where:
  [36;1mCOMMAND[0m is the name of an internal DOS command, such as [36;1mdir[0m.

Notes:
  - Running [32;1mecho[0m without an argument displays a DOS command list.
  - You can view a full list of internal commands with the /a or /all option.
  - Instead of [32;1mhelp[0m [36;1mCOMMAND[0m, you can also get command help with [36;1mCOMMAND[0m /?.

Examples:
  [32;1mhelp[0m [36;1mdir[0m
  [32;1mhelp[0m /all

.
:SHELL_CMD_INTRO_HELP
Displays a full-screen introduction to DOSBox Staging.

.
:SHELL_CMD_INTRO_HELP_LONG
Usage:
  [32;1mintro[0m
  [32;1mintro[0m [37;1mPAGE[0m

Where:
  [37;1mPAGE[0m is the page name to display, including [37;1mcdrom[0m, [37;1mmount[0m, and [37;1mspecial[0m.

Notes:
  Running [32;1mintro[0m without an argument displays one information page at a time;
  press any key to move to the next page. If a page name is provided, then the
  specified page will be displayed directly.

Examples:
  [32;1mintro[0m
  [32;1mintro[0m [37;1mcdrom[0m

.
:SHELL_CMD_MKDIR_HELP
Creates a directory.

.
:SHELL_CMD_MKDIR_HELP_LONG
Usage:
  [32;1mmd[0m [36;1mDIRECTORY[0m
  [32;1mmkdir[0m [36;1mDIRECTORY[0m

Where:
  [36;1mDIRECTORY[0m is the name of the directory to create.

Notes:
  - The directory must be an exact name and does not yet exist.
  - You can specify a path where the directory will be created.

Examples:
  [32;1mmd[0m [36;1mnewdir[0m
  [32;1mmd[0m [36;1mc:\games\dir[0m

.
:SHELL_CMD_RMDIR_HELP
Removes a directory.

.
:SHELL_CMD_RMDIR_HELP_LONG
Usage:
  [32;1mrd[0m [36;1mDIRECTORY[0m
  [32;1mrmdir[0m [36;1mDIRECTORY[0m

Where:
  [36;1mDIRECTORY[0m is the name of the directory to remove.

Notes:
  The directory must be empty with no files or subdirectories.

Examples:
  [32;1mrd[0m [36;1memptydir[0m

.
:SHELL_CMD_SET_HELP
Displays or changes environment variables.

.
:SHELL_CMD_SET_HELP_LONG
Usage:
  [32;1mset[0m
  [32;1mset[0m [37;1mVARIABLE[0m=[36;1m[STRING][0m

Where:
  [37;1mVARIABLE[0m The name of the environment variable.
  [36;1mSTRING[0m   A series of characters to assign to the variable.

Notes:
  - Assigning an empty string to the variable removes the variable.
  - The command without a parameter displays current environment variables.

Examples:
  [32;1mset[0m
  [32;1mset[0m [37;1mname[0m=[36;1mvalue[0m

.
:SHELL_CMD_IF_HELP
Performs conditional processing in batch programs.

.
:SHELL_CMD_IF_HELP_LONG
Usage:
  [32;1mif[0m [35;1m[not][0m [36;1merrorlevel[0m [37;1mNUMBER[0m COMMAND
  [32;1mif[0m [35;1m[not][0m [37;1mSTR1==STR2[0m COMMAND
  [32;1mif[0m [35;1m[not][0m [36;1mexist[0m [37;1mFILE[0m COMMAND

Where:
  [37;1mNUMBER[0m     is a positive integer less or equal to the desired value.
  [37;1mSTR1==STR2[0m compares two text strings (case-sensitive).
  [37;1mFILE[0m       is an exact file name to check for existence.
  COMMAND    is a DOS command or program to run, optionally with parameters.

Notes:
  The COMMAND is run if any of the three conditions in the usage are met.
  If [35;1mnot[0m is specified, then the command runs only with the false condition.
  The [36;1merrorlevel[0m condition is useful for checking if a programs ran correctly.
  If either [37;1mSTR1[0m or [37;1mSTR2[0m may be empty, you can enclose them in quotes (").

Examples:
  [32;1mif[0m [36;1merrorlevel[0m [37;1m2[0m dir
  [32;1mif[0m [37;1m"%%myvar%%"=="mystring"[0m echo Hello world!
  [32;1mif[0m [35;1mnot[0m [36;1mexist[0m [37;1mfile.txt[0m exit

.
:SHELL_CMD_GOTO_HELP
Jumps to a labeled line in a batch program.

.
:SHELL_CMD_GOTO_HELP_LONG
Usage:
  [32;1mgoto[0m [36;1mLABEL[0m

Where:
  [36;1mLABEL[0m is text string used in the batch program as a label.

Notes:
  A label is on a line by itself, beginning with a colon (:).
  The label must be unique, and can be anywhere within the batch program.

Examples:
  [32;1mgoto[0m [36;1mmylabel[0m

.
:SHELL_CMD_SHIFT_HELP
Left-shifts command-line parameters in a batch program.

.
:SHELL_CMD_SHIFT_HELP_LONG
Usage:
  [32;1mshift[0m

Where:
  This command has no parameters.

Notes:
  This command allows a DOS batch program to accept more than 9 parameters.
  Running [32;1mshift[0m left-shifts the batch program variable %%1 to %%0, %%2 to %%1, etc.

Examples:
  [32;1mshift[0m

.
:SHELL_CMD_TYPE_HELP
Display the contents of a text file.

.
:SHELL_CMD_TYPE_HELP_LONG
Usage:
  [32;1mtype[0m [36;1mFILE[0m

Where:
  [36;1mFILE[0m is the name of the file to display.

Notes:
  The file must be an exact file name, optionally with a path.
  This command is only for viewing text files, not binary files.

Examples:
  [32;1mtype[0m [36;1mtext.txt[0m
  [32;1mtype[0m [36;1mc:\dos\readme.txt[0m

.
:SHELL_CMD_REM_HELP
Adds comments in a batch program.

.
:SHELL_CMD_REM_HELP_LONG
Usage:
  [32;1mrem[0m [36;1mCOMMENT[0m

Where:
  [36;1mCOMMENT[0m is any comment you want to add.

Notes:
  Adding comments to a batch program can make it easier to understand.
  You can also temporarily comment out some commands with this command.

Examples:
  [32;1mrem[0m [36;1mThis is my test batch program.[0m

.
:SHELL_CMD_NO_WILD
This is a simple version of the command, no wildcards allowed!

.
:SHELL_CMD_RENAME_HELP
Renames one or more files.

.
:SHELL_CMD_RENAME_HELP_LONG
Usage:
  [32;1mren[0m [37;1mSOURCE[0m [36;1mDESTINATION[0m
  [32;1mrename[0m [37;1mSOURCE[0m [36;1mDESTINATION[0m

Where:
  [37;1mSOURCE[0m      is the name of the file to rename.
  [36;1mDESTINATION[0m is the new name for the renamed file.

Notes:
  - The source file must be an exact file name, optionally with a path.
  - The destination file must be an exact file name without a path.

Examples:
  [32;1mren[0m [37;1moldname[0m [36;1mnewname[0m
  [32;1mren[0m [37;1mc:\dos\file.txt[0m [36;1mf.txt[0m

.
:SHELL_CMD_DELETE_HELP
Removes one or more files.

.
:SHELL_CMD_DELETE_HELP_LONG
Usage:
  [32;1mdel[0m [36;1mPATTERN[0m
  [32;1merase[0m [36;1mPATTERN[0m

Where:
  [36;1mPATTERN[0m can be either an exact filename (such as [36;1mfile.txt[0m) or an inexact
          filename using one or more wildcards, which are the asterisk (*)
          representing any sequence of one or more characters, and the question
          mark (?) representing any single character, such as [36;1m*.bat[0m and [36;1mc?.txt[0m.

Warning:
  Be careful when using a pattern with wildcards, especially [36;1m*.*[0m, as all files
  matching the pattern will be deleted.

Examples:
  [32;1mdel[0m [36;1mtest.bat[0m
  [32;1mdel[0m [36;1mc*.*[0m
  [32;1mdel[0m [36;1ma?b.c*[0m

.
:SHELL_CMD_COPY_HELP
Copies one or more files.

.
:SHELL_CMD_COPY_HELP_LONG
Usage:
  [32;1mcopy[0m [37;1mSOURCE[0m [36;1m[DESTINATION][0m
  [32;1mcopy[0m [37;1mSOURCE1+SOURCE2[+...][0m [36;1m[DESTINATION][0m

Where:
  [37;1mSOURCE[0m      Can be either an exact filename or an inexact filename with
              wildcards, which are the asterisk (*) and the question mark (?).
  [36;1mDESTINATION[0m An exact filename or directory, not containing any wildcards.

Notes:
  The [37;1m+[0m operator combines multiple source files provided to a single file.
  Destination is optional: if omitted, files are copied to the current path.

Examples:
  [32;1mcopy[0m [37;1msource.bat[0m [36;1mnew.bat[0m
  [32;1mcopy[0m [37;1mfile1.txt+file2.txt[0m [36;1mfile3.txt[0m
  [32;1mcopy[0m [37;1m..\c*.*[0m

.
:SHELL_CMD_CALL_HELP
Starts a batch program from within another batch program.

.
:SHELL_CMD_CALL_HELP_LONG
Usage:
  [32;1mcall[0m [37;1mBATCH[0m [36;1m[PARAMETERS][0m

Where:
  [37;1mBATCH[0m      is a batch program to launch.
  [36;1mPARAMETERS[0m are optional parameters for the batch program.

Notes:
  After calling another batch program, the original batch program will
  resume running after the other batch program ends.

Examples:
  [32;1mcall[0m [37;1mmybatch.bat[0m
  [32;1mcall[0m [37;1mfile.bat[0m [36;1mHello world![0m

.
:SHELL_CMD_SUBST_HELP
Assign an internal directory to a drive.

.
:SHELL_CMD_SUBST_HELP_LONG
Usage:
  [32;1msubst[0m [37;1mDRIVE[0m [36;1mPATH[0m
  [32;1msubst[0m [37;1mDRIVE[0m /d

Where:
  [37;1mDRIVE[0m is a drive to which you want to assign a path.
  [36;1mPATH[0m  is a mounted DOS path you want to assign to.

Notes:
  The path must be on a drive mounted by the [32;1mmount[0m command.
  You can remove an assigned drive with the /d option.

Examples:
  [32;1msubst[0m [37;1md:[0m [36;1mc:\games[0m
  [32;1msubst[0m [37;1me:[0m [36;1m/d[0m

.
:SHELL_CMD_LOADHIGH_HELP
Loads a DOS program into upper memory.

.
:SHELL_CMD_LOADHIGH_HELP_LONG
Usage:
  [32;1mlh[0m [36;1mPROGRAM[0m [37;1m[PARAMETERS][0m
  [32;1mloadhigh[0m [36;1mPROGRAM[0m [37;1m[PARAMETERS][0m

Where:
  [36;1mPROGRAM[0m is a DOS TSR program to be loaded, optionally with parameters.

Notes:
  This command intends to save the conventional memory by loading specified DOS
  TSR programs into upper memory if possible. Such programs may be required for
  some DOS games; XMS and UMB memory must be enabled (xms=true and umb=true).
  Not all DOS TSR programs can be loaded into upper memory with this command.

Examples:
  [32;1mlh[0m [36;1mtsrapp[0m [37;1margs[0m

.
:SHELL_CMD_LS_HELP
Displays directory contents in the wide list format.

.
:SHELL_CMD_LS_HELP_LONG
Usage:
  [32;1mls[0m [36;1mPATTERN[0m
  [32;1mls[0m [36;1mPATH[0m

Where:
  [36;1mPATTERN[0m can be either an exact filename or an inexact filename with
          wildcards, which are the asterisk (*) and the question mark (?).
  [36;1mPATH[0m    is an exact path in a mounted DOS drive to list contents.

Notes:
  The command will list directories in [34;1mblue[0m, executable DOS programs
   (*.com, *.exe, *.bat) in [32;1mgreen[0m, and other files in the normal color.

Examples:
  [32;1mls[0m [36;1mfile.txt[0m
  [32;1mls[0m [36;1mc*.ba?[0m

.
:SHELL_CMD_LS_PATH_ERR
ls: cannot access '%s': No such file or directory

.
:SHELL_CMD_ATTRIB_HELP
Displays or changes file attributes.

.
:SHELL_CMD_ATTRIB_HELP_LONG
Usage:
  [32;1mattrib[0m [37;1m[ATTRIBUTES][0m [36;1mPATTERN[0m [29m

Where:
  [37;1mATTRIBUTES[0m are attributes to apply, including one or more of the following:
             [37;1m+R[0m, [37;1m-R[0m, [37;1m+A[0m, [37;1m-A[0m, [37;1m+S[0m, [37;1m-S[0m, [37;1m+H[0m, [37;1m-H[0m
             Where: R = Read-only, A = Archive, S = System, H = Hidden
  [36;1mPATTERN[0m    can be either an exact filename or an inexact filename with
             wildcards, which are the asterisk (*) and the question mark (?),
             or an exact name of a directory.
Notes:
  Multiple attributes can be specified in the command, separated by spaces.
  If not specified, the command shows the current file/directory attributes.

Examples:
  [32;1mattrib[0m [36;1mfile.txt[0m
  [32;1mattrib[0m [37;1m+R[0m [37;1m-A[0m [36;1m*.txt[0m

.
:SHELL_CMD_ATTRIB_GET_ERROR
Unable to get attributes: %s

.
:SHELL_CMD_ATTRIB_SET_ERROR
Unable to set attributes: %s

.
:SHELL_CMD_CHOICE_HELP
Waits for a keypress and sets an ERRORLEVEL value.

.
:SHELL_CMD_CHOICE_HELP_LONG
Usage:
  [32;1mchoice[0m [36;1m[TEXT][0m
  [32;1mchoice[0m /c[:][37;1mCHOICES[0m /n /s /t[:][37;1mc[0m,[35;1mnn[0m [36;1m[TEXT][0m

Where:
  [36;1mTEXT[0m         is the text to display as a prompt, or empty.
  /c[:][37;1mCHOICES[0m Specifies allowable keys, which default to [37;1myn[0m.
  /n           Do not display the choices at end of prompt.
  /s           Enables case-sensitive choices to be selected.
  /t[:][37;1mc[0m,[35;1mnn[0m    Default choice to [37;1mc[0m after [35;1mnn[0m seconds.

Notes:
  This command sets an ERRORLEVEL value starting from 1 according to the
  allowable keys specified in /c option, and the user input can then be checked
  with [32;1mif[0m command. With /n option only the specified text will be displayed,
  but not the actual choices (such as the default [37;1m[Y,N]?[0m) in the end.

Examples:
  [32;1mchoice[0m /t:[37;1my[0m,[35;1m2[0m [36;1mContinue?[0m
  [32;1mchoice[0m /c:[37;1mabc[0m /s [36;1mType the letter a, b, or c[0m

.
:SHELL_CMD_CHOICE_ABORTED

Choice aborted.

.
:SHELL_CMD_PATH_HELP
Displays or sets a search path for executable files.

.
:SHELL_CMD_PATH_HELP_LONG
Usage:
  [32;1mpath[0m
  [32;1mpath[0m [36;1m[[drive:]path[;...][0m

Where:
  [36;1m[[drive:]path[;...][0m is a path containing a drive and directory.
  More than one path can be specified, separated by a semi-colon (;).

Notes:
  Parameter with a semi-colon (;) only clears all search path settings.
  The path can also be set using [32;1mset[0m command, e.g. [32;1mset[0m [37;1mpath[0m=[36;1mZ:[reset]

Examples:
  [32;1mpath[0m
  [32;1mpath[0m [36;1mZ:\;C:\DOS[0m

.
:SHELL_CMD_VER_HELP
View or set the reported DOS version.

.
:SHELL_CMD_VER_HELP_LONG
Usage:
  [32;1mver[0m
  [32;1mver[0m [37;1mset[0m [36;1mVERSION[0m

Where:
  [36;1mVERSION[0m can be a whole number, such as [36;1m5[0m, or include a two-digit decimal
          value, such as: [36;1m6.22[0m, [36;1m7.01[0m, or [36;1m7.10[0m. The decimal can alternatively be
          space-separated, such as: [36;1m6 22[0m, [36;1m7 01[0m, or [36;1m7 10[0m.

Notes:
  The DOS version can also be set in the configuration file under the [dos]
  section using the "ver = [36;1mVERSION[0m" setting.

Examples:
  [32;1mver[0m [37;1mset[0m [36;1m6.22[0m
  [32;1mver[0m [37;1mset[0m [36;1m7 10[0m

.
:SHELL_CMD_VER_VER
DOSBox Staging version %s
DOS version %d.%02d

.
:SHELL_CMD_VER_INVALID
The specified DOS version is not correct.

.
