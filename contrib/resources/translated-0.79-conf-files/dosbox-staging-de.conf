# Dies ist die Konfigurationsdatei für dosbox-staging (0.79.0).
# Zeilen, die mit einem "#" Zeichen beginnen, sind Kommentare.

[sdl]
#          fullscreen: Starte direkt im Vollbildmodus.
#                      Führe INTRO aus und sieh unter Sondertasten nach, wie du die Hotkeys für die
#                      Fenstersteuerung findest.
#             display: Nummer der zu verwendenden Anzeige; die Werte hängen vom Betriebssystem und den
#                      Benutzereinstellungen ab.
#      fullresolution: Welche Auflösung für den Vollbildmodus verwendet werden soll: "Original",
#                      "Desktop" oder eine feste Größe (z.B. 1024x768).
#    windowresolution: Bestimmt die Fenstergröße, die verwendet werden soll:
#                        default:   Wähle die beste Option basierend auf deinem
#                                   System und anderen Einstellungen.
#                        original:  Ändere die Größe des Fensters auf die Auflösung des laufenden
#                                   Programms.
#                        resizable: Erlaub die Veränderung der Größe des DOSBox-Fensters
#                                   Dies ist eine experimentelle Option, funktioniert nur mit
#                                   output=opengl und glshader=sharp (oder "none")
#                        <custom>:  Skaliere den Fensterinhalt auf die angegebenen
#                                   Abmessungen, im Format BxH. Zum Beispiel: 1024x768.
#                                   Die Skalierung wird bei output=surface nicht durchgeführt.
# viewport_resolution: Legt die Größe des Darstellungsbereichs innerhalb des Fensters/Bildschirms fest:
#                        fit:       Das Ansichtsfenster an das verfügbare Fenster/Bildschirm
#                                   anpassen (Standard).
#                        <custom>:  Beschränke das Ansichtsfenster auf eine benutzerdefinierte Auflösung
#                                   oder einen Prozentsatz der Desktopgröße. Angegeben in BxH, N%, N.M%.
#                                   Beispiele: 960x720 oder 50%
#     window_position: Lege die anfängliche Fensterposition fest, wenn du im Fenster-Modus arbeitest:
#                        auto:      Lass den Fenstermanager die Position bestimmen.
#                        <custom>:  Lege die Fensterposition im Format X,Y fest. Zum Beispiel: 250,100
#                                   0,0 ist die obere linke Ecke des Bildschirms.
#  window_decorations: Legt fest, ob der Rahmen im Fenster-Modus angezeigt werden soll.
#        transparency: Stelle die Transparenz des DOSBox Staging-Bildschirms ein.
#                      Von 0 (keine Transparenz) bis 90 (hohe Transparenz).
#           host_rate: Lege die Aktualisierungsrate des Hosts fest:
#                        auto:      Verwende SDI-Raten oder VRR-Raten im Vollbildmodus auf einem
#                                   Bildschirm mit hoher Bildwiederholrate.
#                        sdi:       Verwende die Raten der seriellen Geräteschnittstelle (SDI),
#                                   ohne weitere Anpassungen.
#                        vrr:       Ziehe 3 Hz von der gemeldeten Rate ab
#                                   (Best-Practice für VRR-Anzeigen).
#                        <custom>:  Gib eine benutzerdefinierte Rate als ganzen oder dezimalen Wert
#                                   größer als 23.000 an.
#               vsync: Vertikale Synchronisations-Einstellung nicht implementiert
#                      (Einstellung wird ignoriert).
#          vsync_skip: Anzahl der Mikrosekunden, die das Rendering verzögert sein darf, bevor der
#                      nächste Frame übersprungen wird.
#   presentation_mode: Lege die Aktualisierungsrate des Hosts fest:
#                        auto:      Verwende SDI-Raten oder VRR-Raten im Vollbildmodus auf einem
#                                   Bildschirm mit hoher Bildwiederholrate.
#                        sdi:       Verwende die Raten der seriellen Geräteschnittstelle (SDI),
#                                   ohne weitere Anpassungen.
#                        vrr:       Ziehe 3 Hz von der gemeldeten Rate ab
#                                   (Best-Practice für VRR-Anzeigen).
#                        <custom>:  Gib eine benutzerdefinierte Rate als ganzen oder dezimalen Wert
#                                   größer als 23.000 an.
#                      Mögliche Werte: auto, cfr, vfr.
#              output: Welches Videosystem soll für die Ausgabe verwendet werden.
#                      Mögliche Werte: surface, texture, texturenb, texturepp, opengl, openglnb, openglpp.
#    texture_renderer: Wähle einen Renderer-Treiber, wenn du einen Textur-Ausgabemodus verwendest.
#                      Verwende texture_renderer=auto für eine automatische Auswahl.
#                      Mögliche Werte: auto, opengl, opengles2, software.
#       capture_mouse: Wähle eine Methode zur Maussteuerung:
#                         onclick:        Die Maus wird beim ersten Klick innerhalb des Fensters
#                                         umgeschaltet.
#                         onstart:        Die Maus wird sofort beim Start umgeschaltet
#                                         (ähnlich wie beim echten DOS).
#                         seamless:       Die Maus kann frei in das und aus dem DOSBox
#                                         Fenster bewegt werden.
#                         nomouse:        Die Maus wird deaktiviert und der Mauszeiger versteckt,
#                                         ohne jegliche Eingabe an das ausgeführte Programm.
#                      Wähle, wie Mittelklicks behandelt werden (zweiter Parameter):
#                         middlegame:     Mittelklicks werden an das ausgeführte Programm gesendet
#                                         (Strg+F10 hebt die Umschaltung der Maus auf).
#                         middlerelease:  Mittelklicks verwenden, um die Maus umzuschalten
#                                         (nicht mehr an das ausgeführte Programm senden). Allerdings
#                                         werden Mittelklicks jedoch im Vollbildmodus an das ausgeführte
#                                         Programm gesendet oder wenn "seamless" eingestellt ist.
#                                         Mit Strg+F10 wird die Maus auch wieder umgeschaltet.
#                      Standardwerte (falls nicht vorhanden oder falsch): seamless middlerelease
#                      Mögliche Werte: seamless, onclick, onstart, nomouse.
#         sensitivity: Maus-Empfindlichkeit. Der optionale zweite Parameter gibt die vertikale
#                      Empfindlichkeit an (z.B. 100,-50).
#     raw_mouse_input: Aktiviere diese Einstellung, um die Mausbeschleunigungs- und
#                      Empfindlichkeitseinstellungen deines Betriebssystems zu umgehen. Dies
#                      funktioniert im Vollbildmodus oder wenn die Maus im Fenstermodus erfasst wird.
#         waitonerror: Wartet bevor die Konsole geschlossen wird, wenn Dosbox eine Fehlermeldung anzeigt.
#            priority: Prioritätsstufen für Dosbox. Der zweite Eintrag hinter dem Komma ist für den
#                      Fall, dass die Dosbox nicht fokussiert/minimiert ist.
#                      Pause ist nur für den zweiten Eintrag gültig.
#                      Mögliche Werte: auto, lowest, lower, normal, higher, highest.
#  mute_when_inactive: Schalte den Ton stumm, wenn das Fenster inaktiv ist.
# pause_when_inactive: Emulation anhalten, wenn das Fenster inaktiv ist.
#          mapperfile: Datei, aus der die Key/Event-Mappings geladen/gespeichert werden.
#                      Resetmapper funktioniert nur mit dem Standardwert.
#         screensaver: Verwende "allow" oder "block" um die SDL_VIDEO_ALLOW_SCREENSAVER
#                      Umgebungsvariable zu überschreiben (die normalerweise den Betriebssystem-
#                      Bildschirmschoner blockiert während DOSBox läuft.
#                      Mögliche Werte: auto, allow, block.

fullscreen          = false
display             = 0
fullresolution      = desktop
windowresolution    = default
viewport_resolution = fit
window_position     = auto
window_decorations  = true
transparency        = 0
host_rate           = auto
vsync               = false
vsync_skip          = 7000
presentation_mode   = auto
output              = opengl
texture_renderer    = auto
capture_mouse       = seamless middlerelease
sensitivity         = 100
raw_mouse_input     = false
waitonerror         = true
priority            = auto auto
mute_when_inactive  = false
pause_when_inactive = false
mapperfile          = mapper-sdl2-0.79.0.map
screensaver         = auto

[dosbox]
#           language: Wähle eine andere Sprachdatei aus.
#            machine: Der Typ der Maschine, die DOSBox versucht zu emulieren.
#                     Mögliche Werte: hercules, cga, cga_mono, tandy, pcjr, ega, vgaonly, svga_s3, svga_et3000, svga_et4000, svga_paradise, vesa_nolfb, vesa_oldvbe.
#           captures: Verzeichnis, in dem Aufzeichnungen wie wave, midi und screenshots gespeichert
#                     werden.
#            memsize: Die Menge an Speicher, die DOSBox emuliert, in Megabyte.
#                     Dieser Wert wird am besten auf dem Standardwert belassen, um Probleme mit
#                     einigen Programmen zu vermeiden, obwohl einige wenige Programme einen höheren
#                     Wert benötigen könnten. Es gibt generell keinen Geschwindigkeitsvorteil,
#                     wenn du diesen Wert erhöhst.
# mcb_fault_strategy: Wie durch Software beschädigte Speicherkettenblöcke behandelt werden sollten:
#                       deny:    Beenden (und melden), wenn Fehler entdeckt werden (Standard).
#                       repair:  Repariere (und melde) Fehler mit Hilfe benachbarter Kettenblöcke.
#                       report:  Melde Fehler, aber fahre ansonsten so fort, als ob nichts gewesen
#                                wäre.
#                       allow:   Erlaube es, dass Fehler nicht gemeldet werden (Hardwareverhalten).
#                     Die Standardeinstellung (deny) wird empfohlen, es sei denn, ein Spiel schlägt
#                     mit MCB-Fehlern fehl.
#                     Mögliche Werte: deny, repair, report, allow.
#           vmemsize: Videospeicher in MiB (1-8) oder KiB (256 bis 8192). "auto" verwendet den
#                     Standardwert pro Videoadapter.
#                     Mögliche Werte: auto, 1, 2, 4, 8, 256, 512, 1024, 2048, 4096, 8192.
#           dos_rate: Passe die Bildrate des emulierten Videomodus in Hz an:
#                     default:  Der DOS-Videomodus bestimmt die Rate (empfohlen).
#                     host:     Passe die DOS-Rate an die Host-Rate an (siehe Einstellung "host_rate").
#                     <value>:  Setzt die Rate auf einen exakten Wert, zwischen 24.000 und
#                     1000.000 (Hz). Wir empfehlen die "Standard"-Rate; andernfalls kannst du sie für
#                     jedes Spiel einzeln testen und einstellen.
#         vesa_modes: Steuert die Auswahl der angebotenen VESA 1.2 und 2.0 Modi:
#                       compatible   Eine maßgeschneiderte Auswahl, die die Kompatibilität der
#                                    Programme maximiert. Dies wird zusammen mit 4 oder 8 MB
#                                    Videospeicher empfohlen.
#                       all          Bietet alle Modi für eine bestimmte Videospeichergröße, allerdings
#                                    können einige Programme sie nicht richtig nutzen (Flackern) oder
#                                    benötigen mehr Systemspeicher (mem = ), um sie zu nutzen.
#                     Mögliche Werte: compatible, all, halfline.
#         speed_mods: Erlaube Änderungen, die die Leistung verbessern. Derzeit sind keine Programme
#                     bekannt, die davon betroffen sind. Bitte melde dem Projekt einen Bug, wenn du
#                     ein Programm findest, das nicht funktioniert, wenn diese Option auf "true"
#                     gesetzt ist, damit wir es hier auflisten können.
#   autoexec_section: Wie Autoexec-Abschnitte aus mehreren Konfigurationsdateien behandelt werden.
#                     join      : Fasst sie in einem großen Abschnitt zusammen (altes Verhalten).
#                     overwrite : Verwende die zuletzt gefundene, wie bei anderen conf-Einstellungen.
#                     Mögliche Werte: join, overwrite.
#          automount: Bindet Verzeichnisse 'drives/[c]' beim Start als Laufwerke ein, wobei [c] für 
#                     ein klein geschriebener Laufwerksbuchstabe von a bis y ist. Der Ordner "drives"
#                     kann relativ zum aktuellen Verzeichnis oder über die integrierten Ressourcen
#                     angegeben werden. Die Mount-Einstellungen können optional in einer [c].conf-
#                     Datei in dem Verzeichnis des Laufwerks mit folgendem Inhalt angegeben werden:
#                       [laufwerk]
#                       type    = dir, overlay, floppy oder cdrom
#                       label   = Laufwerksbezeichnung
#                       path    = Pfadangabe, z.B.: path = %%path%%;c:\tools
#                       override_drive = das Verzeichnis stattdessen auf dieses Laufwerk mounten
#                                        (standardmäßig leer)
#                       verbose = true oder false
#  startup_verbosity: Bestimmt die Ausführlichkeit der Anzeigen, bevor das Programm angezeigt wird:
#                     Verbosität  |Willkommen| Frühe Ausgabe
#                     high        |   ja     |    ja
#                     low         |  nein    |    ja
#                     quiet       |  nein    |   nein
#                     auto        | "low" wenn Dateiname oder Verzeichnis übergeben werden,
#                                         sonst "high".
#                     Mögliche Werte: auto, high, low, quiet.

language           = 
machine            = svga_s3
captures           = capture
memsize            = 16
mcb_fault_strategy = deny
vmemsize           = auto
dos_rate           = default
vesa_modes         = compatible
speed_mods         = true
autoexec_section   = join
automount          = true
startup_verbosity  = auto

[render]
#          frameskip: Wie viele Frames DOSBox überspringt, bevor es einen anzeigt.
#             aspect: Skaliert die vertikale Auflösung, um ein Bildseitenverhältnis von 4:3 zu
#                     erzeugen, das dem der ursprünglichen Monitore entspricht, für die die Mehrheit
#                     der DOS Programme entwickelt wurden. Diese Einstellung betrifft nur Videomodi,
#                     die nicht-quadratische Pixel verwenden, wie 320x200 oder 640x400; während Modi
#                     mit quadratischen Pixeln, wie 640x480 und 800x600, unverändert angezeigt werden.
# monochrome_palette: Wähle die Standard-Palette für die monochrome Darstellung.
#                     Funktioniert nur bei der Emulation von hercules oder cga_mono.
#                     Du kannst mit F11 die verfügbaren Farben durchschalten.
#                     Mögliche Werte: white, paperwhite, green, amber.
#         cga_colors: Legt die Interpretation der CGA-RGBI-Farben fest. Betrifft alle Maschinentypen,
#                     die in der Lage sind CGA-Grafiken oder besser anzeigen können.
#                     Integrierte Presets:
#                       default:       Klassische CGA-Palette, wie sie von VGA-Adaptern emuliert
#                                      wird (Standard).
#                       tandy [BL]:    Emulation eines idealisierten Tandy-Monitors mit einstellbarem
#                                      Braun-Wert (0 - rot, 50 - braun, 100 - dunkelgelb;
#                                      Standardwert ist 50).
#                       tandy-warm:    Emulation der tatsächlichen Farbausgabe eines unbekannten
#                                      Tandy-Monitors.
#                       ibm5153 [C]:   Emulation der Farbausgabe eines IBM 5153 Monitors mit
#                                      einer Kontraststeuerung, die nur nicht helle Farben abdunkelt
#                                      (0 bis 100; Standardeinstellung ist 100).
#                       agi-amiga-v1, agi-amiga-v2, agi-amiga-v3:
#                                      Paletten, die von den Amiga-Portierungen der Sierra AGI
#                                      Programme verwendet werden (siehe Handbuch für weitere Details).
#                       agi-amigaish:  Eine Mischung aus EGA- und Amiga-Farben, die der Sarien
#                                      AGI-Interpreter verwendet.
#                       scumm-amiga:   Palette, die von den Amiga-Portierungen der EGA-Spiele von
#                                      LucasArts verwendet wurde.
#                       colodore:      Vom Commodore 64 inspirierte Farben, die auf der Colodore-
#                                      Palette basieren.
#                       colodore-sat:  Colodore-Palette mit 20% mehr Sättigung.
#                       dga16:         Eine moderne Interpretation der klassischen CGA-Palette mit
#                                      reduziertem Kontrast.
#                     Du kannst auch benutzerdefinierte Farben einstellen, indem du 16 durch
#                     Leerzeichen oder Kommata getrennte Farbwerte angibst, entweder als 3- oder
#                     6-stellige Hex-Codes (z. B. #f00 oder #ff0000 für Rot) oder als dezimale
#                     RGB-Tripletts (z. B. (255, 0, 255) für Magenta).
#             scaler: Der Scaler wird verwendet, um Modi mit niedriger Auflösung zu vergrößern/zu
#                     verbessern. Wenn "forced" angehängt wird, dann wird der Scaler benutzt, auch wenn
#                     das Ergebnis nicht gewollt sein könnte.
#                     Beachte, dass einige Scaler schwarze Ränder verwenden können, um das Bild
#                     innerhalb deiner konfigurierten Displayauflösung anzupassen. Wenn dies
#                     unerwünscht ist, versuche entweder einen anderen Scaler oder aktiviere die
#                     Ausgabe mit voller Auflösung.
#                     Mögliche Werte: none, normal2x, normal3x, advmame2x, advmame3x, advinterp2x, advinterp3x, hq2x, hq3x, 2xsai, super2xsai, supereagle, tv2x, tv3x, rgb2x, rgb3x, scan2x, scan3x.
#           glshader: Entweder "none" oder ein GLSL-Shadername. Funktioniert nur mit
#                     OpenGL-Ausgabe.  Kann entweder ein absoluter Pfad, eine Datei
#                     im "glshaders" Unterverzeichnis des DOSBox
#                     Konfigurationsverzeichnisses, oder einer der eingebauten Shader sein:
#                     advinterp2x, advinterp3x, advmame2x, advmame3x,
#                     crt-easymode-flat, crt-fakelottes-flat, rgb2x, rgb3x,
#                     scan2x, scan3x, tv2x, tv3x, sharp (Standard).

frameskip          = 0
aspect             = true
monochrome_palette = white
cga_colors         = default
scaler             = none
glshader           = default

[composite]
#   composite: Aktiviere den Composite-Modus beim Start. Die Einstellung "auto" lässt das
#              Programm entscheiden.
#              Hinweis: Stelle die Einstellungen unten (z.B. Farbton) mit den Composite-Hotkeys
#                       ein. Lies dann die neuen Einstellungen von deiner Konsole ab und gib
#                       sie hier ein.
#              Mögliche Werte: auto, on, off.
#         era: Die Ära der Composite-Technologie. Wenn "auto", verwendet PCjr "new" und
#              CGA/Tandy "old".
#              Mögliche Werte: auto, old, new.
#         hue: Erscheinungsbild der RGB-Palette. Beispiel: Verändere den Wert, bis der
#              Himmel blau ist.
#  saturation: Intensität der Farben, von verwaschen bis leuchtend.
#    contrast: Verhältnis zwischen dunklen und hellen Bereichen.
#  brightness: Helligkeit des Bildes, von dunkel bis hell.
# convergence: Konvergenz der Subpixel-Elemente, von unscharf bis scharf (nur CGA und Tandy).

composite   = auto
era         = auto
hue         = 0
saturation  = 100
contrast    = 100
brightness  = 0
convergence = 0

[cpu]
#      core: CPU-Kern, der für die Emulation verwendet wird. "auto" schaltet auf dynamisch,
#            wenn verfügbar und angemessen.
#            Mögliche Werte: auto, dynamic, normal, simple.
#   cputype: CPU Typ, der in der Emulation verwendet wird. "auto" ist die schnellste Wahl.
#            Mögliche Werte: auto, 386, 386_slow, 486_slow, pentium_slow, 386_prefetch.
#    cycles: Anzahl der Instruktionen, die DOSBox pro Millisekunde versucht zu emulieren.
#            Wenn du diesen Wert zu hoch einstellst, kommt es zu Tonaussetzern und Lags.
#            "cycles" kann auf 3 Arten eingestellt werden:
#              "auto"          Versucht zu erkennen, was ein ausgeführtes Programm braucht.
#                              Das funktioniert in der Regel, kann aber bei bestimmten
#                              Programmen scheitern.
#              "fixed #number" Stellt eine feste Anzahl von Instruktionen ein. Das ist die
#                              Einstellung, die du normalerweise benötigst, wenn "auto"
#                              versagt (Beispiel: fixed 4000).
#              "max"           Wird so viele Instruktionen verwenden, wie dein System
#                              verarbeiten kann.
#            Mögliche Werte: auto, fixed, max.
#   cycleup: Anzahl der Instruktionen um welche der aktuelle Wert mit den Tastenkombinationen
#            verringert/erhöht wird.
# cycledown: Wenn du ihn niedriger als 100 einstellst, wird er prozentual angezeigt.

core      = auto
cputype   = auto
cycles    = auto
cycleup   = 10
cycledown = 20

[mixer]
#    nosound: Aktiviere die Stummschaltung, der Ton wird aber trotzdem emuliert.
#       rate: Mixer-Samplerate. Wenn du die Rate eines Geräts höher einstellst, wird die
#             Klangqualität wahrscheinlich schlechter.
#             Mögliche Werte: 8000, 11025, 16000, 22050, 32000, 44100, 48000.
#  blocksize: Mixer-Blockgröße. Größere Blöcke können stotternde Audioausgabe verhindern,
#             aber der Ton wird auch mehr verzögert.
#             Mögliche Werte: 128, 256, 512, 1024, 2048, 4096, 8192.
#  prebuffer: Wie viele Millisekunden Daten zusätzlich zur Blockgröße vorgehalten werden sollen.
#  negotiate: Erlaube dem System-Audiotreiber, die optimale Rate und Blockgröße
#             so nah wie möglich an den angegebenen Werten auszuhandeln.
# compressor: Aktiviere den Auto-Leveling Kompressor auf dem Masterkanal,
#             um Clipping der Audioausgabe zu verhindern:
#               off:  Deaktiviere den Kompressor.
#               on:   Aktiviere den Kompressor (Standard).
#  crossfeed: Stelle Crossfeed global auf allen Stereokanälen für das Hören über Kopfhörer ein:
#               off:         Kein Crossfeed (Standard).
#               on:          Aktiviere das Crossfeed (Stärke 40).
#               <strength>:  Stelle Crossfeed-Stärke von 0 bis 100 ein, wobei 0 kein Crossfeed
#                            (aus) bedeutet und 100 volles Crossfeed (Stereo -> Mono).
#             Hinweis: Du kannst Crossfeed für jede Quelle über Mixer-Befehle einstellen.
#     reverb: Aktiviere den Hall global, um dem Klang ein Gefühl von Raum zu geben:
#               off:     Kein Nachhall (Standard).
#               on:      Aktiviere den Nachhall (mittlere Voreinstellung).
#               tiny:    Simuliert den Klang eines kleinen integrierten Lautsprechers in einem
#                        Raum; speziell für Audiosysteme mit kleinen Lautsprechern entwickelt
#                        (PC Speaker, Tandy, PS/1 Audio, und LPT Digital-Analog-Wandler).
#               small:   Verleiht ein subtiles Gefühl von Raum; gut für Spiele, die einen
#                        einzigen Synth-Kanal (normalerweise OPL) für Musik und Soundeffekte
#                        verwenden.
#               medium:  Mittlere Raumvoreinstellung, die gut mit einer Vielzahl von Spielen
#                        funktioniert.
#               large:   Die Voreinstellung "Großer Saal" wird für Spiele empfohlen, die
#                        getrennte Kanäle für Musik und digitales Audio verwenden.
#               huge:    Eine stärkere Variante der Voreinstellung "Große Saal"; funktioniert
#                        sehr gut in einigen Spielen mit stimmungsvollen Soundtracks.
#             Hinweis: Du kannst den Hallpegel für jeden Kanal über Mixer-Befehle anpassen.
#             Mögliche Werte: off, on, tiny, small, medium, large, huge.
#     chorus: Aktiviere den Chorus global, um dem Klang Räumlichkeit zu verleihen:
#               off:     Kein Chorus (Standard).
#               on:      Chorus aktivieren (Voreinstellung 'normal').
#               light:   Ein leichter Chorus-Effekt (besonders geeignet für
#                        Synthesizer-Musik, die viel weißes Rauschen enthält).
#               normal:  Normaler Chorus, der mit einer Vielzahl von Programmen gut
#                        funktioniert.
#               strong:  Ein offensichtlicher und vordergründiger Chorus-Effekt.
#             Hinweis: Du kannst die Chorus-Pegel der einzelnen Quellen über Mixer-
#                      Befehle anpassen.
#             Mögliche Werte: off, on, light, normal, strong.

nosound    = false
rate       = 48000
blocksize  = 512
prebuffer  = 20
negotiate  = true
compressor = true
crossfeed  = off
reverb     = off
chorus     = off

[midi]
# mididevice: Gerät, das die MIDI-Daten empfangen wird (von der emulierten MIDI
#             Schnittstelle - MPU-401). Wähle eine der folgenden Möglichkeiten:
#             "fluidsynth", um den eingebauten MIDI-Synthesizer zu verwenden. Siehe den
#                    [fluidsynth] Abschnitt für die detaillierte Konfiguration.
#             "mt32", um den eingebauten Roland MT-32 Synthesizer zu verwenden.
#                    Siehe den Abschnitt [mt32] für eine detaillierte Konfiguration.
#             "auto", um den ersten funktionierenden externen MIDI-Player zu verwenden.
#             Dies kann ein Software-Synthesizer oder ein physisches Gerät sein.
#             Mögliche Werte: auto, oss, alsa, fluidsynth, mt32, none.
# midiconfig: Konfigurationsoptionen für das ausgewählte MIDI-Interface.
#             Dies ist normalerweise die ID oder der Name des MIDI-Synthesizers, den du
#             benutzen willst (finde die id/den Namen mit dem DOS Befehl "mixer /listmidi").
#             - Diese Option hat keinen Effekt, wenn du die eingebauten Synthesizer benutzt
#               (mididevice = fluidsynth oder mt32).
#             - Wenn du ALSA benutzt, benutze den Linux-Befehl "aconnect -l", um die offenen
#               MIDI Ports aufzulisten und einen auszuwählen (zum Beispiel "midiconfig=14:0"
#               für Sequenzer-Client 14, Port 0).
#             - Wenn du einen realen Roland MT-32 mit Revision 0 PCB verwendest,
#               kann es sein, dass die Hardware eine Verzögerung benötigt, um den
#               Puffer nicht überläuft. In diesem Fall musst du "delaysysex" hinzufügen,
#               zum Beispiel: "midiconfig=2 delaysysex".
#             Siehe das README/Manual für weitere Details.
#     mpu401: Typ des zu emulierenden MPU-401.
#             Mögliche Werte: intelligent, uart, none.

mididevice = auto
midiconfig = 
mpu401     = intelligent

[fluidsynth]
#     soundfont: Pfad zu einer SoundFont-Datei im .sf2-Format. Du kannst einen
#                absoluten oder relativen Pfad verwenden, oder den Namen einer .sf2-Datei in
#                dem Verzeichnis "soundfonts" in deinem DOSBox-Konfigurations-
#                Verzeichnis.
#                Hinweis: Die optionale Lautstärkeskalierung in Prozent nach dem Dateinamen
#                wird nicht mehr unterstützt. Bitte verwende stattdessen einen Mixer-Befehl,
#                um die Lautstärke des FluidSynth-Audiokanals zu ändern, z. B:
#                  MIXER FSYNTH 200
# fsynth_chorus: Chorus-Effekt: "auto", "on", "off" oder benutzerdefinierte Werte.
#                Wenn du benutzerdefinierte Werte verwendest:
#                  Alle fünf Werte müssen in der richtigen Reihenfolge und durch Leerzeichen
#                  getrennt angegeben werden.
#                  Sie lauten: voice-count, level, speed, depth und modulation-wave, wobei:
#                  - voice-count eine ganze Zahl zwischen 0 und 99 ist
#                  - level eine Dezimalzahl zwischen 0.0 und 10.0 ist
#                  - speed eine Dezimalzahl in Hz von 0.1 bis 5.0 ist
#                  - depth eine Dezimalzahl von 0.0 bis 21.0 ist
#                  - modulation-wave ist entweder "sine" oder "triangle"
#                  Zum Beispiel: chorus = 3 1.2 0.3 8.0 sine
# fsynth_reverb: Reverb-Effekt: "auto", "on", "off" oder benutzerdefinierte Werte.
#                Wenn du benutzerdefinierte Werte verwendest:
#                  Alle fünf Werte müssen in der richtigen Reihenfolge und durch Leerzeichen
#                  getrennt angegeben werden.
#                  Sie lauten: room-size, damping, width und level, wobei:
#                  - room-size eine Dezimalzahl zwischen 0.0 to 1.0 ist
#                  - damping eine Dezimalzahl zwischen 0.0 to 1.0 ist
#                  - width eine Dezimalzahl zwischen 0.0 to 100.0 ist
#                  - level eine Dezimalzahl zwischen 0.0 to 1.0 ist
#                  Zum Beispiel: reverb = 0.61 0.23 0.76 0.56
#                Hinweis: Du kannst den FluidSynth-Hall deaktivieren und stattdessen den
#                Mixer-Hall auf dem FluidSynth-Kanal aktivieren, oder
#                beide Halleffekte gleichzeitig aktivieren. Ob dies
#                gut klingt hängt vom SoundFont und den verwendeten Hall-Einstellungen,
#                die verwendet werden, ab.
# fsynth_filter: Filter für das FluidSynth-Ausgangssignal:
#                  off:       Die Ausgabe nicht filtern (Standard).
#                  <custom>:  Benutzerdefinierter Filter; siehe "sb_filter" für Details.

soundfont     = default.sf2
fsynth_chorus = auto
fsynth_reverb = auto
fsynth_filter = off

[mt32]
#       model: Modell des zu verwendenden Synthesizers. Die Voreinstellung (auto) bevorzugt
#              CM-32L wenn beide ROM-Sets vorhanden sind. Für frühe Sierra Programme und Dune 2
#              wird die Verwendung von "mt32" empfohlen, während neuere Programme typischerweise
#              die zusätzlichen Soundeffekte des CM-32L nutzen (verwende "auto" oder "cm32l")
#              Mögliche Werte: auto, cm32l, cm32l_102, cm32l_100, mt32, mt32_old, mt32_107, mt32_106, mt32_105, mt32_104, mt32_bluer, mt32_new, mt32_204.
#      romdir: Das Verzeichnis, das ein oder beide Paare von MT-32 und/oder CM-32L ROMs enthält.
#              Die Dateien müssen in Großbuchstaben benannt werden, wie folgt:
#                - MT-32 ROM Paar: MT32_CONTROL.ROM und MT32_PCM.ROM
#                - CM-32L ROM Paar: CM32L_CONTROL.ROM und CM32L_PCM.ROM
#              Das Verzeichnis kann absolut oder relativ sein, oder lass es leer, um
#              das "mt32-roms" Verzeichnis in deinem DOSBox Konfigurationsverzeichnis zu
#              verwenden, gefolgt von der Überprüfung anderer üblicher Systemverzeichnisse.
# mt32_filter: Filter für den Roland MT-32/CM-32L Audioausgang:
#                off:       Die Ausgabe nicht filtern (Standard).
#                <custom>:  Benutzerdefinierter Filter; siehe "sb_filter" für Details.

model       = auto
romdir      = 
mt32_filter = off

[sblaster]
#              sbtype: Typ des Sound Blasters, der emuliert werden soll. "gb" ist Game Blaster.
#                      Mögliche Werte: sb1, sb2, sbpro1, sbpro2, sb16, gb, none.
#              sbbase: Die IO-Adresse des Sound Blasters.
#                      Mögliche Werte: 220, 240, 260, 280, 2a0, 2c0, 2e0, 300.
#                 irq: Die IRQ-Nummer des Sound Blasters.
#                      Mögliche Werte: 7, 5, 3, 9, 10, 11, 12.
#                 dma: Die DMA-Nummer des Sound Blasters.
#                      Mögliche Werte: 1, 5, 0, 3, 6, 7.
#                hdma: Die High-DMA-Nummer des Sound Blasters.
#                      Mögliche Werte: 1, 5, 0, 3, 6, 7.
#             sbmixer: Erlaube dem Sound Blaster Mixer, den DOSBox Mixer zu überschreiben.
#            sbwarmup: Stummschalten des DMA-Audio nach dem Einschalten der Karte in Millisekunden.
#                      Dadurch werden die Knackgeräusche beim Starten vieler SB-basierter Spiele
#                      reduziert. Reduziere diesen Wert, wenn du feststellst, dass bei der ersten
#                      Wiedergabe Audio fehlt.
#             oplmode: Typ der OPL-Emulation. Bei "auto" wird der Modus durch "sbtype" bestimmt.
#                      Alle OPL-Modi sind AdLib-kompatibel, ausser "cms".
#                      Mögliche Werte: auto, cms, opl2, dualopl2, opl3, opl3gold, none.
#           sb_filter: Filter, der für den digitalen Sound Blaster-Ausgang emuliert werden soll:
#                        auto:  Verwende den Filter, der durch "sbtype" bestimmt wird (Standard).
#                        sb1, sb2, sbpro1, sbpro2, sb16:
#                                 Verwende den Filter dieses Sound Blaster-Modells.
#                        off:   Filtere die Ausgabe nicht.
#                      Ein zweiter Parameter "always_on" kann angegeben werden, um zu verhindern,
#                      dass Programme den Filter ausschalten.
#                      (Beispiel: sbpro1 always_on)
# sb_filter_always_on: Erzwinge, dass der Sound Blaster-Filter immer eingeschaltet ist
#                      (verhindern, dass Programme den Filter ausschalten).
#          opl_filter: Typ des Filters, der für den Sound Blaster OPL-Ausgang emuliert werden soll:
#                        auto:  Verwende den Filter, der durch "sbtype" bestimmt wird (Standard).
#                        sb1, sb2, sbpro1, sbpro2, sb16:
#                                 Verwende den Filter dieses Sound Blaster-Modells.
#                        off:   Filtere die Ausgabe nicht.
#          cms_filter: Filter für den Sound Blaster CMS-Ausgang:
#                        on:   Filtere die Ausgabe (Standard).
#                        off:  Filtere die Ausgabe nicht.

sbtype              = sb16
sbbase              = 220
irq                 = 7
dma                 = 1
hdma                = 5
sbmixer             = true
sbwarmup            = 100
oplmode             = auto
sb_filter           = modern
sb_filter_always_on = false
opl_filter          = auto
cms_filter          = on

[gus]
#        gus: Aktiviere die Gravis UltraSound Emulation.
#    gusbase: Die IO-Basisadresse des Gravis UltraSound.
#             Mögliche Werte: 240, 220, 260, 280, 2a0, 2c0, 2e0, 300.
#     gusirq: Die IRQ-Nummer des Gravis UltraSound.
#             Mögliche Werte: 5, 3, 7, 9, 10, 11, 12.
#     gusdma: Der DMA-Kanal des Gravis UltraSound.
#             Mögliche Werte: 3, 0, 1, 5, 6, 7.
#   ultradir: Pfad zum UltraSound Verzeichnis. In diesem Verzeichnis
#             sollte sich ein MIDI-Verzeichnis befinden, das
#             die Patch-Dateien für die GUS-Wiedergabe enthält.
#             Patch-Sets, die mit Timidity verwendet werden,
#             sollten gut funktionieren.
# gus_filter: Filter for the Gravis UltraSound audio output:
#               off:       Don't filter the output (default).
#               <custom>:  Custom filter definition; see 'sb_filter' for details.

gus        = false
gusbase    = 240
gusirq     = 5
gusdma     = 3
ultradir   = C:\ULTRASND
gus_filter = off

[innovation]
#          sidmodel: Modell des Chips, der auf der Innovation SSI-2001 Karte emuliert werden soll:
#                     - auto:  Wählt den 6581 Chip aus.
#                     - 6581:  Der Original-Chip, bekannt für seinen basslastigen und satten Charakter.
#                     - 8580:  Eine spätere Revision, die der SID-Spezifikation besser entsprach.
#                              Er korrigiert die DC-Vorspannung des 6581 und ist weniger anfällig für
#                              Verzerrungen. Der 8580 ist eine Option auf Reproduktionskarten, wie
#                              dem DuoSID.
#                     - none:  Deaktiviert die Karte.
#                    Mögliche Werte: auto, 6581, 8580, none.
#          sidclock: Die Taktfrequenz des SID-Chips, die auf Nachbaukarten jumperbar ist.
#                     - default: verwendet 0,895 MHz, wie auf der originalen SSI-2001 Karte.
#                     - c64ntsc: verwendet 1,023 MHz, für NTSC Commodore PCs und das DuoSID.
#                     - c64pal: verwendet 0,985 MHz, für PAL Commodore PCs und das DuoSID.
#                     - hardsid: verwendet 1.000 MHz, verfügbar auf dem DuoSID.
#                    Mögliche Werte: default, c64ntsc, c64pal, hardsid.
#           sidport: Die IO Port Adresse des Innovation SSI-2001.
#                    Mögliche Werte: 240, 260, 280, 2a0, 2c0.
#        6581filter: Die analoge Filterung des SID bedeutete, dass jeder Chip physikalisch
#                    einzigartig war.
#                    Stellt die Filterstärke des 6581 als Prozentwert von 0 bis 100 ein.
#        8580filter: Passt die Filterstärke des 8580 als Prozentwert von 0 bis 100 an.
# innovation_filter: Filter for the Innovation audio output:
#                      off:       Don't filter the output (default).
#                      <custom>:  Custom filter definition; see 'sb_filter' for details.

sidmodel          = none
sidclock          = default
sidport           = 280
6581filter        = 50
8580filter        = 50
innovation_filter = off

[speaker]
#           pcspeaker: Aktiviere die PC-Lautsprecher-Emulation.
#                      Mögliche Werte: discrete, impulse, none, off.
#    pcspeaker_filter: Filter für den PC-Speaker-Ausgang:
#                        on:   Filtert die Ausgabe (Standard).
#                        off:  Die Ausgabe nicht filtern.
#               tandy: Aktiviere die Tandy Sound System Emulation. Bei "auto" ist die Emulation nur
#                      vorhanden, wenn "machine" auf "tandy" eingestellt ist.
#                      Mögliche Werte: auto, on, off.
#        tandy_filter: Filter für den Tandy-Synthesizer-Ausgang:
#                        on:   Filtert die Ausgabe (Standard).
#                        off:  Die Ausgabe nicht filtern.
#    tandy_dac_filter: Filter für den Tandy DAC-Ausgang:
#                        on:   Filtert die Ausgabe (Standard).
#                        off:  Die Ausgabe nicht filtern.
#             lpt_dac: Typ des DAC, der an den Parallelport angeschlossen ist:
#                        disney:    Disney Sound Source.
#                        covox:     Covox Speech Thing.
#                        ston1:     Stereo-on-1 DAC, in stereo bis zu 30 kHz.
#                        none/off:  Keinen Parallelport-DAC verwenden (Standard).
#                      Mögliche Werte: none, disney, covox, ston1, off.
#      lpt_dac_filter: Filter für das/die LPT-DAC-Audiogerät(e):
#                        on:        Filtere die Ausgabe (Standard).
#                        off:       Filtere die Ausgabe nicht.
#                        <custom>:  Benutzerdefinierter Filter; siehe "sb_filter" für Details.
#            ps1audio: Aktiviere die IBM PS/1 Audio Emulation.
#     ps1audio_filter: Filter für den PS/1 Audio-Synthesizer-Ausgang:
#                        on:   Filtere die Ausgabe (Standard).
#                        off:  Filtere die Ausgabe nicht.
# ps1audio_dac_filter: Filter für den PS/1 Audio-DAC-Ausgang:
#                        on:   Filtere die Ausgabe (Standard).
#                        off:  Filtere die Ausgabe nicht.

pcspeaker           = discrete
pcspeaker_filter    = on
tandy               = auto
tandy_filter        = on
tandy_dac_filter    = on
lpt_dac             = none
lpt_dac_filter      = on
ps1audio            = false
ps1audio_filter     = on
ps1audio_dac_filter = on

[joystick]
#                joysticktype: Typ des zu emulierenden Joysticks: auto (Standard),
#                              none (deaktiviert die Joystick-Emulation),
#                              2axis (unterstützt zwei Joysticks),
#                              4axis (unterstützt einen Joystick, erster Joystick verwendet),
#                              4axis_2 (unterstützt einen Joystick, zweiter Joystick verwendet),
#                              fcs (Thrustmaster), ch (CH Flightstick).
#                              auto wählt die Emulation abhängig von dem/den realen Joystick(s).
#                              (Vergiss nicht, das Mapperfile der DOSBox zurückzusetzen, wenn du es vorher
#                              gespeichert hast)
#                              Mögliche Werte: auto, 2axis, 4axis, 4axis_2, fcs, ch, hidden, disabled.
#                       timed: aktiviere zeitgesteuerte Intervalle für die Achsen. Experimentiere mit dieser
#                              Option, wenn dein Joystick (weg) driftet.
#                    autofire: feuert kontinuierlich, solange du die Taste gedrückt hältst.
#                      swap34: vertauscht die 3. und 4. Achse. Kann für bestimmte Joysticks nützlich sein.
#                  buttonwrap: aktiviere Button Wrapping bei der Anzahl der emulierten Buttons.
#               circularinput: aktiviere die Übersetzung der kreisförmigen Eingabe in eine quadratische Ausgabe.
#                              Versuche dies zu aktivieren, wenn dein linker Analogstick sich nur in einem
#                              Kreis bewegen kann.
#                    deadzone: der Prozentsatz der Bewegung, der ignoriert werden soll. 100 macht den Stick zu
#                              einem digitalen Stick.
# use_joy_calibration_hotkeys: Aktiviert Hotkeys, um die Kalibrierung der X- und Y-Achse des Joysticks in
#                              Echtzeit zu ermöglichen.
#                              Verwende dies nur, wenn die Kalibrierung im Spiel fehlschlägt und andere
#                              Einstellungen bereits ausprobiert wurden.
#                               - Mit Strg/CMD+Pfeiltasten stellst du den Skalarwert der Achse ein:
#                                   - links und rechts verkleinert bzw. vergrößert den Skalar der x-Achse.
#                                   - runter und hoch verkleinern bzw. vergrößern den Skalar der y-Achse.
#                               - Alt+Pfeiltasten passt die Offset-Position der Achse an:
#                                   - links und rechts verschiebt die x-Achse in die angegebene Richtung.
#                                   - runter und hoch verschiebt den Y-Achsen-Versatz in die angegebene Richtung.
#                               - Setze die X- und Y-Kalibrierung mit Strg+Entf bzw. Strg+Home zurück.
#                              Jeder Tastendruck meldet X- oder Y-Kalibrierungswerte, die du dann unten
#                              einstellen kannst. Wenn du Parameter gefunden hast, die funktionieren, beende
#                              das Programm, setze diese Einstellung zurück auf false und gib die gemeldeten
#                              Kalibrierungsparameter unten ein.
#           joy_x_calibration: Wende die Parameter für die Kalibrierung der x-Achse über die Hotkeys an.
#                              Die Voreinstellung ist "auto".
#           joy_y_calibration: Wende die Parameter für die Kalibrierung der y-Achse über die Hotkeys an.
#                              Die Voreinstellung ist "auto".

joysticktype                = auto
timed                       = true
autofire                    = false
swap34                      = false
buttonwrap                  = false
circularinput               = false
deadzone                    = 10
use_joy_calibration_hotkeys = false
joy_x_calibration           = auto
joy_y_calibration           = auto

[serial]
#       serial1: Typ des Gerätes, das mit dem Com-Port verbunden ist.
#                Kann disabled, dummy, modem, nullmodem, directserial sein.
#                Zusätzliche Parameter müssen in der gleichen Zeile in der Form von
#                parameter:wert angegeben werden. Parameter für alle Typen ist irq (optional).
#                für directserial: realport (erforderlich), rxdelay (optional).
#                                 (realport:COM1 realport:ttyS0).
#                für modem: listenport (optional).
#                für nullmodem: server, rxdelay, txdelay, telnet, usedtr,
#                               transparent, port, inhsocket (alle optional).
#                Beispiel: serial1=modem listenport:5000
#                Mögliche Werte: dummy, disabled, mouse, modem, nullmodem, direct.
#       serial2: siehe serial1
#                Mögliche Werte: dummy, disabled, mouse, modem, nullmodem, direct.
#       serial3: siehe serial1
#                Mögliche Werte: dummy, disabled, mouse, modem, nullmodem, direct.
#       serial4: siehe serial1
#                Mögliche Werte: dummy, disabled, mouse, modem, nullmodem, direct.
# phonebookfile: Datei, die benutzt wird, um Fake-Telefonnummern auf Adressen zu mappen.

serial1       = dummy
serial2       = dummy
serial3       = disabled
serial4       = disabled
phonebookfile = phonebook.txt

[dos]
#                   xms: Aktiviere die XMS-Unterstützung.
#                   ems: Aktiviere die EMS-Unterstützung. Der Standard (=true) bietet die beste
#                        Kompatibilität, aber bestimmte Anwendungen laufen besser mit anderen
#                        Einstellungen oder erfordern die Deaktivierung der EMS-Unterstützung (=false)
#                        um überhaupt zu funktionieren.
#                        Mögliche Werte: true, emsboard, emm386, false.
#                   umb: Aktiviere die UMB-Unterstützung.
#                   ver: Setzt die DOS Version (5.0 als Standard). Anzugeben als major.minor Format.
#                        Eine einzelne Zahl wird als die Hauptversion behandelt.
#                        Übliche Einstellungen sind 3.3, 5.0, 6.22, und 7.1.
#               country: Lege den DOS-Ländercode fest, der länderspezifische
#                        Informationen wie Datum, Uhrzeit und Dezimalformate
#                        beeinflusst. Wenn er auf 0 gesetzt ist, wird der
#                        Ländercode verwendet, der dem ausgewählte Tastatur-
#                        layout entspricht.
# expand_shell_variable: Enable expanding environment variables such as %PATH%
#                        while in the DOS command shell. FreeDOS and MS-DOS 7/8
#                        COMMAND.COM supports this behavior.
#        keyboardlayout: Sprachcode des Tastaturlayouts (oder keines).

xms                   = true
ems                   = true
umb                   = true
ver                   = 5.0
country               = 0
expand_shell_variable = false
keyboardlayout        = auto

[ipx]
# ipx: Aktiviere IPX über UDP/IP Emulation.

ipx = false

[ethernet]
#            ne2000: Aktiviere die Emulation einer Novell NE2000-Netzwerkkarte in einem software-
#                    basierten Netzwerk (mit libslirp) mit den folgenden Eigenschaften:
#                     - 255.255.255.0 : Subnetzmaske des virtuellen LAN 10.0.2.0.
#                     - 10.0.2.2      : IP des Gateways und des DHCP-Dienstes.
#                     - 10.0.2.3      : IP des virtuellen DNS-Servers.
#                     - 10.0.2.15     : Die erste von DHCP bereitgestellte IP, deine IP!
#                    Hinweis: Unter DOS wird für die Einrichtung ein NE2000-Paket-Treiber,
#                             DHCP-Client und ein TCP/IP-Stack benötigt. Möglicherweise
#                             benötigst du eine Port-Weiterleitung vom Host zum DOS-Gast
#                             und von deinem Router zu deinem Host, wenn du als Server
#                             für Multiplayer-Spiele fungierst.
#           nicbase: Die Basisadresse der NE2000-Karte.
#                    Hinweis: Die Adressen 220 und 240 sind möglicherweise nicht verfügbar, da sie
#                             Sound Blaster und Gravis UltraSound standardmäßig zugewiesen sind.
#                    Mögliche Werte: 200, 220, 240, 260, 280, 2c0, 300, 320, 340, 360.
#            nicirq: Der Interrupt, der von der NE2000-Karte verwendet wird.
#                    Hinweis: Die IRQs 3 und 5 sind möglicherweise nicht verfügbar, da sie
#                             "serial2" und dem Gravis UltraSound standardmäßig zugewiesen sind.
#                    Mögliche Werte: 3, 4, 5, 9, 10, 11, 12, 14, 15.
#           macaddr: Die MAC-Adresse der NE2000-Karte.
# tcp_port_forwards: Leitet einen oder mehrere TCP-Ports vom Host an den DOS-Gast weiter.
#                    Das Format ist:
#                      port1  port2  port3 ... (z.B., 21 80 443)
#                      Dadurch werden FTP, HTTP und HTTPS an den DOS-Gast weitergeleitet.
#                    Wenn die Ports auf dem Host privilegiert sind, kann ein Mapping verwendet werden
#                      Host:Gast  ..., (z.B., 8021:21 8080:80)
#                      Dadurch werden die Ports 8021 und 8080 an FTP und HTTP im Gast weitergeleitet
#                    Ein Bereich von benachbarten Ports kann mit einem Bindestrich abgekürzt werden:
#                      Start-Ende ... (z.B., 27910-27960)
#                      Dadurch werden die Ports 27910 bis 27960 an den DOS-Gast weitergeleitet.
#                    Zuordnungen und Bereiche können auch kombiniert werden:
#                      HStart-HEnde:GStart-GEnde ..., (z.B, 8040-8080:20-60)
#                      Dies leitet die Ports 8040 bis 8080 an die Ports 20 bis 60 des Gastes weiter.
#                    Anmerkungen:
#                      - Wenn die zugewiesenen Bereiche unterschiedlich sind, wird der kürzere Bereich
#                        erweitert, damit er passt.
#                      - Wenn widersprüchliche Host-Ports angegeben werden, wird nur der erste
#                        eingerichtet.
#                      - Bei widersprüchlichen Gast-Ports hat die letztere Regel Vorrang.
# udp_port_forwards: Leitet einen oder mehrere UDP-Ports vom Host an den DOS-Gast weiter.
#                    Das Format ist dasselbe wie bei der Weiterleitung von TCP-Ports.

ne2000            = true
nicbase           = 300
nicirq            = 3
macaddr           = AC:DE:48:88:99:AA
tcp_port_forwards = 
udp_port_forwards = 

[autoexec]
# Die Zeilen in diesem Abschnitt werden beim Start ausgeführt.
# Du kannst deine MOUNT-Zeilen hier einfügen.


