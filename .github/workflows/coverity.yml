name: Coverity Scan analysis

on:
  push:
    branches:
      - master

env:
  COVERITY_EMAIL: ${{ secrets.CoverityEmail }}
  COVERITY_TOKEN: ${{ secrets.CoverityToken }}
  BASE_DIR: "/dev/shm"
  PACKAGE: "/dev/shm/coverity-package/coverity.tar.zst"
  PACKAGE_DIR: "/dev/shm/coverity-package"
  # Latest package: https://scan.coverity.com/download
  PACKAGE_VERSION: "2019.03"
  TARBALL_GDRIVE_ID: ${{ secrets.GoogleDriveId }}
  TARBALL_SHA256: "0bec2d12e7fca3fe4b6df843d9584e2a58e273970a8549c100541f86dbc0da4e"

jobs:
  coverity_scan:
    name: Coverity static analyzer
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run:  sudo apt-get update
      - name: Log and setup environment
        run: |
          ./scripts/log-env.sh
          mkdir -p "${PACKAGE_DIR}"

      - name: Install C++ compiler and dependencies
        run: |
          sudo apt-get install zstd python3-setuptools $(./scripts/list-build-dependencies.sh -m apt -c gcc)
          sudo pip3 install gdown

      - name: Prepare the Coverity package cache
        uses: actions/cache@v2
        id: cache-coverity
        with:
          path: ${{ env.PACKAGE_DIR }}
          key: coverity-${{ env.PACKAGE_VERSION }}
      - name:  Fetch the Coverity package
        if:    steps.cache-coverity.outputs.cache-hit != 'true'
        run:   gdown --id "${TARBALL_GDRIVE_ID}" -O "${PACKAGE}"

      - name: Install the Coverity package
        run: |
          set -xeuo pipefail
          tee >(tar -I zstd -C "${BASE_DIR}" -x) < "${PACKAGE}" \
          | sha256sum -c <(echo "${TARBALL_SHA256} -" )

      - name: Build and instrument the project
        run: |
          set -xeu
          g++ --version
          ./autogen.sh
          export CFLAGS="-g -Og"
          export CXXFLAGS="${CFLAGS}"
          ./configure
          PATH="${BASE_DIR}/cov-analysis-linux64-${PACKAGE_VERSION}/bin:${PATH}"
          cov-build --dir cov-int make -j "$(nproc)"
          tar -cvaf package.tar.gz cov-int

      - name: Upload the package to Coverity
        run: |
          curl \
          --form token="${COVERITY_TOKEN}" \
          --form email="${COVERITY_EMAIL}" \
          --form file=@package.tar.gz \
          --form version="${GITHUB_REF}" \
          --form description="${GITHUB_REPOSITORY}" \
          "https://scan.coverity.com/builds?project=dosbox-staging"
