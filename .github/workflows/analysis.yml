name: Code analysis

on: [push]

jobs:
  static_clang_analyser:
    name: Clang static analyzer
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - name: Log environment
        run:  ./scripts/log-env.sh
      - run:  sudo apt update
      - name: Install packages
        run:  sudo apt-get install -y $(./scripts/list-build-dependencies.sh -p apt --compiler clang) python3-setuptools
      - name: Install scan-build (Python version)
        run:  sudo pip3 install scan-build beautifulsoup4 html5lib
      - name: Build
        run: |
          # build steps
          set -x
          g++ --version
          ./autogen.sh
          ./configure
          intercept-build make -j "$(nproc)"
      - name: Analyze
        run:  analyze-build -v -o report --html-title="dosbox-staging (${GITHUB_SHA:0:8})"
      - uses: actions/upload-artifact@master
        with:
          name: report
          path: report
      - name: Summarize report
        run: |
          # summary
          echo "Full report is included in build Artifacts"
          echo
          ./scripts/count-bugs.py report/*/index.html


  dynamic_clang8:
    name: Clang analyzer
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        sanitizer: [usan, msan]
    env:
      LOG: clang-${{ matrix.sanitizer }}.log
    steps:
      - uses: actions/checkout@v1
      - name: Log environment
        run:  ./scripts/log-env.sh
      - run:  sudo apt update
      - name: Install dependencies
        run:  sudo apt-get install -y $(./scripts/list-build-dependencies.sh -p apt --compiler clang --compiler-version 8)
      - name: Build
        run:  ./scripts/build.sh --compiler clang --compiler-version 8 --release ${{ matrix.sanitizer }}

      - name: Prepare log
        run: |
            echo "
            Repository: ${GITHUB_REPOSITORY}
            Branch:     $(git branch | grep \* | cut -d ' ' -f2)
            Commit:     ${GITHUB_SHA:0:8}
            -----------------------------------------" >> "${LOG}"

      - name: Testcase 1. Enter-Exit
        run:  (xvfb-run ./src/dosbox -c exit || true) | tee -a "${LOG}"

      - uses: actions/upload-artifact@master
        with:
          name: clang-${{ matrix.sanitizer }}.log
          path: clang-${{ matrix.sanitizer }}.log


  dynamic_gcc9:
    name: GCC analyzer
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        sanitizer: [usan, uasan, tsan]
    env:
      LOG: gcc-${{ matrix.sanitizer }}.log
    steps:
      - uses: actions/checkout@v1
      - name: Log environment
        run:  ./scripts/log-env.sh
      - run:  sudo apt update
      - name: Install dependencies
        run:  sudo apt-get install -y $(./scripts/list-build-dependencies.sh -p apt --compiler-version 9)
      - name: Build
        run:  ./scripts/build.sh --compiler-version 9 --release ${{ matrix.sanitizer }}

      - name: Prepare log
        run: |
            echo "
            Repository: ${GITHUB_REPOSITORY}
            Branch:     $(git branch | grep \* | cut -d ' ' -f2)
            Commit:     ${GITHUB_SHA:0:8}
            -----------------------------------------" >> "${LOG}"

      - name: Testcase 1. Enter-Exit
        run:  (xvfb-run ./src/dosbox -c exit || true) | tee -a "${LOG}"

      - uses: actions/upload-artifact@master
        with:
          name: gcc-${{ matrix.sanitizer }}.log
          path: gcc-${{ matrix.sanitizer }}.log
