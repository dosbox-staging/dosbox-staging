name: Code analysis
on: push
jobs:

  static_clang_analyser:
    name: Clang static analyzer
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Log environment
        run:  ./scripts/log-env.sh
      - run:  sudo apt update
      - name: Install packages
        run:  sudo apt-get install -y $(./scripts/list-build-dependencies.sh -p apt --compiler clang) python3-setuptools
      - name: Install scan-build (Python version)
        run:  sudo pip3 install scan-build beautifulsoup4 html5lib
      - name: Build
        run: |
          # build steps
          set -x
          g++ --version
          ./autogen.sh
          ./configure
          intercept-build make -j "$(nproc)"
      - name: Analyze
        run:  analyze-build -v -o report --html-title="dosbox-staging (${GITHUB_SHA:0:8})"
      - uses: actions/upload-artifact@master
        with:
          name: report
          path: report
      - name: Summarize report
        run: |
          # summary
          echo "Full report is included in build Artifacts"
          echo
          ./scripts/count-bugs.py 92 report/*/index.html

  dynamic_matrix:
    name: ${{ matrix.compiler }}-${{ matrix.compiler_version }} ${{ matrix.sanitizer }} analyzer
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [Clang, GCC]
        compiler_version: [8, 9]
        sanitizer: [UASAN, USAN, MSAN, TSAN]
        exclude:
          - compiler: Clang
            compiler_version: 9
          - compiler: GCC
            compiler_version: 8
          - compiler: Clang
            sanitizer: UASAN
          - compiler: Clang
            sanitizer: TSAN
          - compiler: GCC
            sanitizer: MSAN

    env:
      LOG_PREFIX: ${{ matrix.compiler }}-${{ matrix.sanitizer }}
    steps:
      - uses: actions/checkout@v1
      - name: Log environment
        run:  ./scripts/log-env.sh
      - run:  sudo apt update
      - name: Install dependencies
        run:  sudo apt-get install -y $(./scripts/list-build-dependencies.sh -p apt --compiler ${{ matrix.compiler }} --compiler-version ${{ matrix.compiler_version }})
      - name: Build
        run:  ./scripts/build.sh --compiler ${{ matrix.compiler }} --compiler-version ${{ matrix.compiler_version }} --build-type ${{ matrix.sanitizer }}
      - name: Testcase 1. Enter-Exit
        run:  (xvfb-run ./src/dosbox -c exit || true) | tee -a "${LOG_PREFIX}-TestCase-1.log"

      - uses: actions/upload-artifact@master
        with:
          name: ${{ matrix.compiler }}-${{ matrix.sanitizer }}-TestCase-1.log
          path: ${{ matrix.compiler }}-${{ matrix.sanitizer }}-TestCase-1.log
