name: "Build"

on: [push]

jobs:

  build_gcc9:
    name: "GCC 9 (ubuntu-18.04)"
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - name: "Log environment"
        run: ./scripts/log-env.sh
      - run: sudo apt update
      - name: "Install packages"
        run: sudo apt-get install g++-9 libsdl1.2-dev libsdl-net1.2-dev libsdl-sound1.2-dev
      - name: "Build"
        env:
          CC: gcc-9
          CXX: g++-9
        run: |
          # build steps
          set -x
          $CXX --version
          ./autogen.sh
          ./configure CXXFLAGS="-Wall -fdiagnostics-color=always"
          make -j "$(nproc)" |& tee build.log
      - name: "Summarize warnings"
        run: python3 ./scripts/count-warnings.py build.log

  build_gcc_ubuntu:
    name: "GCC"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-16.04]
    steps:
      - uses: actions/checkout@v1
      - name: "Log environment"
        run: ./scripts/log-env.sh
      - run: sudo apt update
      - name: "Install packages"
        run: sudo apt-get install libsdl1.2-dev libsdl-net1.2-dev libsdl-sound1.2-dev
      - name: "Build"
        run: |
          # build steps
          set -x
          g++ --version
          ./autogen.sh
          ./configure CXXFLAGS="-Wall -fdiagnostics-color=always"
          make -j "$(nproc)" |& tee build.log
      - name: "Summarize warnings"
        run: python3 ./scripts/count-warnings.py build.log

  build_clang:
    name: "Clang (ubuntu-18.04)"
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - name: "Log environment"
        run: ./scripts/log-env.sh
      - run: sudo apt update
      - name: "Install packages"
        run: sudo apt-get install libsdl1.2-dev libsdl-net1.2-dev libsdl-sound1.2-dev
      - name: "Build"
        env:
          CC: clang
          CXX: clang++
        run: |
          # build steps
          set -x
          $CXX --version
          ./autogen.sh
          ./configure CXXFLAGS="-Wall"
          make -j "$(nproc)" |& tee build.log
      - name: "Summarize warnings"
        run: python3 ./scripts/count-warnings.py build.log

  build_macos:
    name: "Clang (macOS-10.14)"
    runs-on: macOS-10.14
    steps:
      - uses: actions/checkout@v1
      - name: "Log environment"
        run: ./scripts/log-env.sh
      - run: brew update
      - name: "Install packages"
        run: brew install automake libpng sdl sdl_net sdl_sound
      - name: "Build"
        run: |
          # build steps
          set -x
          clang++ --version
          ./autogen.sh
          ./configure CXXFLAGS="-Wall"
          make -j "$(sysctl -n hw.physicalcpu)" 2>&1 | tee build.log
      - name: "Summarize warnings"
        run: python3 ./scripts/count-warnings.py build.log

  build_msvc_debug:
    name: "MSVC 14 Debug (win-2019)"
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v1
      - name: "Log environment"
        shell: pwsh
        run: .\scripts\log-env.ps1
      - name: "Install packages"
        shell: pwsh
        run: |
          vcpkg install libpng sdl1 sdl1-net
          vcpkg integrate install
      - name: "Build"
        shell: pwsh
        env:
          PATH: '${env:PATH};C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\amd64'
        run: |
          # build steps
          cd visualc_net
          MSBuild -m dosbox.sln -p:Configuration=Debug

  build_msvc_release:
    name: "MSVC 14 Release (win-2019)"
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v1
      - name: "Log environment"
        shell: pwsh
        run: .\scripts\log-env.ps1
      - name: "Install packages"
        shell: pwsh
        run: |
          vcpkg install libpng sdl1 sdl1-net
          vcpkg integrate install
      - name: "Build"
        shell: pwsh
        env:
          PATH: '${env:PATH};C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\amd64'
        run: |
          # build steps
          cd visualc_net
          MSBuild -m dosbox.sln -p:Configuration=Release
