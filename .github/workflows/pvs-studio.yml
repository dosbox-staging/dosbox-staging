name: PVS-Studio analysis
permissions: read-all

on:
  push:
    paths-ignore:
      - '.clang-format'
      - '.mdl-styles'
      - '*.md'
      - 'docs/**'
      - 'licenses/**'
      - 'website/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pvs_studio_analyzer:
    name: PVS-Studio static analyzer
    runs-on: ubuntu-22.04
    env:
      VCPKG_ROOT: ${{ github.workspace }}/vcpkg

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: Setup CMake
        uses: lukka/get-cmake@ea004816823209b8d1211e47b216185caee12cc5 # v4.0.2

      - name: Configure PVS-Studio repository
        run: |
          set -xeu
          wget -q -O - https://files.pvs-studio.com/etc/pubkey.txt | sudo apt-key add -
          sudo wget -O /etc/apt/sources.list.d/viva64.list https://files.pvs-studio.com/etc/viva64.list
          sudo apt-get update

      - name: Install dependencies
        run: |
          export DEBIAN_FRONTEND=noninteractive
          sudo apt-get install -y $(cat packages/ubuntu-22.04-apt.txt)
          sudo apt-get install pvs-studio

      - name: Clone vcpkg
        run: git clone https://github.com/microsoft/vcpkg.git $VCPKG_ROOT

      - name: Bootstrap vcpkg
        run: |
          cd $VCPKG_ROOT
          ./bootstrap-vcpkg.sh

      - name: Log environment
        run:  ./scripts/ci/log-env.sh

      - name: Configure PVS-Studio license
        run: |
          set -xeu
          pvs-studio-analyzer credentials "${{ secrets.PvsStudioName }}" "${{ secrets.PvsStudioKey }}"

      - name: Setup and build
        run: |
          set -x
          export CC=clang
          export CXX=clang++
          cmake --preset debug-linux-vcpkg

          # TODO Consider using the the PV-Studio CMake integration instead
          # of calling the `pvs-studio-analyzer` directly. That might be a
          # more maintainable approach, but needs further investigation.
          # More info:
          # - https://pvs-studio.com/en/docs/manual/0036/
          # - https://github.com/viva64/pvs-studio-cmake-examples
          #
          pvs-studio-analyzer trace -- cmake --build --preset debug-linux-vcpkg

      - name: Analyze
        run: |
          set -xeu
          log="pvs-report.log"
          general_criteria="GA:1,2;64:1;OP:1,2,3;CS:1"
          stamp="$(date +'%Y-%m-%d_T%H%M')-${GITHUB_SHA:0:8}"
          reportdir="pvs-report/pvs-report-${stamp}"
          disable_warnings="V002,V801,V802,V813,V826,V1042,V1071,V2008,V2010"

          mkdir -p "${reportdir}"

          pvs-studio-analyzer analyze \
            -a 63 \
            -e subprojects -e src/libs \
            -s .pvs-suppress \
            -j "$(nproc)" \
            -o "${log}"

          plog-converter \
            -p dosbox-staging \
            -v "${GITHUB_SHA:0:8}" \
            -a "${general_criteria}" \
            -d "${disable_warnings}" \
            -t fullhtml,csv \
            -o "${reportdir}" \
            "${log}"

          pvs-studio-analyzer suppress \
            -a "${general_criteria}" \
            -o "${reportdir}/supressible-list.json" \
            "${log}"

          ln -sf "${reportdir}/pvs-report.csv" .
          mv -f "${reportdir}/pvs-report.fullhtml"/* "${reportdir}/"
          rm -rf "${reportdir}/pvs-report.fullhtml"

      - name: Upload report
        uses: actions/upload-artifact@v4.3.1
        with:
          name: pvs-analysis-report
          path: pvs-report
          overwrite: true

      - name: Summarize report
        env:
          MAX_BUGS: 172
        run: |
          echo "Full report is included in build Artifacts"
          echo
          ./scripts/ci/count-pvs-bugs.py "pvs-report.csv" "${MAX_BUGS}"
