name: Config heavy

on:
  schedule: [cron: '0 16 * * *']

jobs:
  config_all:
    name: ${{ matrix.system.name }} ${{ matrix.conf.configure_flags }} ${{ matrix.conf.without_packages }}
    runs-on: ${{ matrix.system.os }}
    strategy:
      max-parallel: 8
      matrix:
        system:
          - name: Windows
            os: windows-latest
            compiler: gcc
          - name: macOS
            os: macos-latest
            compiler: clang
          - name: Linux
            os: ubuntu-latest
            compiler: gcc
        conf:
          - configure_flags:  --enable-debug
          - configure_flags:  --enable-debug=heavy
          - configure_flags:  --enable-alsa-midi
          - configure_flags:  --enable-png-static
          - configure_flags:  --enable-sdl-static
          - configure_flags:  --enable-png-static --enable-sdl-static
          - configure_flags:  --disable-core-inline
          - configure_flags:  --disable-dynamic-x86
          - configure_flags:  --disable-dynrec
          - configure_flags:  --disable-fpu
          - configure_flags:  --disable-fpu-x64
          - configure_flags:  --disable-fpu-x86
          - configure_flags:  --disable-opengl
          - configure_flags:  --disable-opus-cdda
          - configure_flags:  --disable-screenshots
          - configure_flags:  --disable-unaligned-memory
          - without_packages: -x net
          - without_packages: -x curses
          - without_packages: -x net -x curses
    env:
      CHERE_INVOKING: yes
    steps:
      - uses: actions/checkout@v2
      - name: Check repo for commits
        id:   repo-meta
        shell: bash
        run:  'echo ::set-output name=has-commits::$(./scripts/has-commits-since.sh "24 hours ago")'

      - name:  Get Date
        id:    get-date
        if:    >
          matrix.system.name == 'Windows' &&
          steps.repo-meta.outputs.has-commits == 'true'
        shell: bash
        run:   echo ::set-output name=date::$(date +%Y-%W)

      - uses:  actions/cache@v2
        id:    cache-msys2
        if:    >
          matrix.system.name == 'Windows' &&
          steps.repo-meta.outputs.has-commits == 'true'
        with:
          path: 'C:/tools/msys64'
          key: msys2-64-${{ steps.get-date.outputs.date }}-3

      - name:  Install MSYS2 (Windows)
        if:    >
          matrix.system.name == 'Windows' &&
          steps.cache-msys2.outputs.cache-hit != 'true' &&
          steps.repo-meta.outputs.has-commits == 'true'
        run:   choco install msys2 --no-progress

      - name:  Install dependencies ${{ matrix.conf.without_packages }} (Windows)
        if:    >
          matrix.system.name == 'Windows' &&
          steps.cache-msys2.outputs.cache-hit != 'true' &&
          steps.repo-meta.outputs.has-commits == 'true'
        shell: python scripts\msys-bash.py {0}
        run: |
           scripts/list-build-dependencies.sh -m msys2 -c clang ${{ matrix.conf.without_packages }} | xargs pacman -S --noconfirm
           .github/scripts/shrink-msys2.sh

      - name:  Install dependencies ${{ matrix.conf.without_packages }} (Linux)
        if:    >
          matrix.system.name == 'Linux' &&
          steps.repo-meta.outputs.has-commits == 'true'
        run: |
          sudo apt-get -y update
          sudo apt-get install -y $(./scripts/list-build-dependencies.sh -m apt -c gcc ${{ matrix.conf.without_packages }})

      - name:  Install dependencies ${{ matrix.conf.without_packages }} (macOS)
        if:    >
          matrix.system.name == 'macOS' &&
          steps.repo-meta.outputs.has-commits == 'true'
        run:   brew install $(./scripts/list-build-dependencies.sh -m brew -c clang ${{ matrix.conf.without_packages }})

      - name:  Build ${{ matrix.conf.configure_flags }} (Windows)
        if:    >
          matrix.system.name == 'Windows' &&
          steps.repo-meta.outputs.has-commits == 'true'
        shell: python scripts\msys-bash.py {0}
        run:   scripts/build.sh -c ${{ matrix.system.compiler }} -t debug --bin-path /mingw64/bin ${{ matrix.conf.configure_flags }}

      - name:  Build ${{ matrix.conf.configure_flags }} (macOS)
        if:    >
          matrix.system.name == 'macOS' &&
          steps.repo-meta.outputs.has-commits == 'true'
        run: |
          export PKG_CONFIG_PATH="/usr/local/opt/ncurses/lib/pkgconfig:$PKG_CONFIG_PATH"
          ./scripts/build.sh -c ${{ matrix.system.compiler }} -t debug ${{ matrix.conf.configure_flags }}

      - name:  Build ${{ matrix.conf.configure_flags }} (Linux)
        if:    >
          matrix.system.name == 'Linux' &&
          steps.repo-meta.outputs.has-commits == 'true'
        run:   ./scripts/build.sh -c ${{ matrix.system.compiler }} -t debug ${{ matrix.conf.configure_flags }}
