# 0.81.0 release notes

**Release date:** 2023-12-22

## Summary

TODO

Read on for all the details!


## How to upgrade

TODO

Get started by downloading the latest version and updating your configuration
file:

### Downloads

<div class="compact" markdown>

- [Linux](../linux.md)
- [Windows](../windows.md)
- [macOS](../macos.md)

</div>

### Upgrade your configuration file

TODO

1. Launch the new release.
2. At the`Z:\>` prompt, run `config -wc` to write the new configuration file.

!!! note

    - Existing settings will be retained, but extraneous comments will be
      dropped.

    - Starting with version 0.80, the configuration file is written in the
      language in which DOSBox Staging was started.

    - To write an English configuration file, launch with the `-lang en`
      command-line flag (to start DOSBox Staging in English) and then (re-)write
      your configuration file.


## Graphics


### OpenGL PBO support dropped

OpenGL pixel buffer object support was dropped to enhance performance and
efficiency. This will result in reduced energy use, reduced thermal load and
significantly improved performance on single-board computers, Intel HD
Graphics, and AMD APUs.

### Support for disabling the screen via the clocking mode register

Alien Carnage/Halloween Harry game is now supported by allowing the screen to
be disabled via the clocking mode register.

### Updated Catmull-Rom shader

Catmull-Rom shader is now sampling in the correct colour space. The black halo
effect has been removed from the outer edges of the screen, so the shader is
now well behaved.



??? note "Full PR list of graphics related changes"

    - (S)VGA/VESA square pixel mode fix/cleanup (#2583)
    - Adaptive CRT shader compatibility fixes for really old GPUs (#3172)
    - Adaptive shader fixes (#2866)
    - Add `crt-auto-arcade-sharp` adaptive CRT shader (#3083)
    - Add `misc/fixvideo.glsl` OpenGL shader (#2442)
    - Add crt/aperture.mono shader variant (#2393)
    - Add new glshader/misc dir to the Meson build (#2443)
    - Add support for disabling screen via the clocking mode register, fixes #2838 (#2842)
    - Always log OpenGL shader and program info logs if they're non-empty (#3121)
    - Aspect ratio and viewport improvements (#3124)
    - Authentic adaptive CRT shaders (#2777)
    - Auto-disable the integer scaling feature if the image is smaller thanâ€¦ (#2588)
    - Capture modularisation/cleanup (#2451)
    - Change VESA BIOS branding to 'DOSBox Staging' (#2712)
    - Clean up OpenGL attribute init (#3111)
    - De-SDL voodoo threading (#2568)
    - Deprecate machine type `vgaonly` (#2398)
    - Disable framebuffer acceleration for debugger (#2477)
    - Don't auto-disable OpenGL for debugger-enabled builds on Linux (#2480)
    - Don't restrict text video modes to the VFR presentation mode (#2286)
    - Double-scanning support for VESA modes, accurate mode change logging, `vga_draw.cpp` rework & many other improvements (#2654)
    - Drop OpenGL PBO support (#3099)
    - Enable vsync by default (#2373)
    - Fix "-fullscreen" argument on Wayland (#2688)
    - Fix CGA composite regression (#2662)
    - Fix Tandy support for Ninja (1986) (#2225)
    - Fix VESA 256 / 8-bit in Windows 3.1 (#2569)
    - Fix a couple aspect ratios (#2612)
    - Fix a couple issues from the `vgaonly` PR (#2424)
    - Fix a crash when using `glshader = crt-auto-machine` (#3077)
    - Fix a window size regression on macOS (#2374)
    - Fix altered shader pragmas not taking an effect when reloading the shader (#2736)
    - Fix comment describing BGRX8888 PixelFormat (#2766)
    - Fix compilation failures on *BSD and colour rendering on big-endian platforms (#3155)
    - Fix const issue writing a png with png12 (#2740)
    - Fix double-scanning & pixel-doubling handling in `openglnb` output mode (#3092)
    - Fix fallback shader scaling for adaptive CRT shaders (#2840)
    - Fix flicker in some games due to mouse driver breaking double buffering (#2867)
    - Fix image capture indices always starting from 1 (#2656)
    - Fix incorrect pixel aspect ratio calculation for all text modes (#2570)
    - Fix invalid default config value for voodoo_memsize (#2744)
    - Fix mapper screen for high dpi (#2708)
    - Fix raw image & video capture for 160x200 16-colour Tandy/PCjr modes  (#3185)
    - Fix raw video capture so it always writes non-double-scanned raw output (#3177)
    - Fix regression in Build Engine games (3Dfx mode) (#2432)
    - Fix regression in VGA draw's wrapped line case (#2441)
    - Fix regression in palettized VGA line draw function (#2491)
    - Fix regressions in some video modes' aspect and line-counts (#2445)
    - Fix sRGB GLSL pragmas (#2665)
    - Fix spelling mistakes in 'voodoo_*' config descriptions (#2859)
    - Fix the aspect ratio of 40-column 00h and 01h BIOS text modes (#2852)
    - Fix the calculation of vga.draw.lines_scaled when double scanning (#2806)
    - Fix vertical bars due to FILD/FIST memcpy trick (#3151)
    - Fixes and cleanup of PCI BIOS (#2731)
    - Force OpenGL renderer backend for keymapper (#2768)
    - Give Voodoo a gentle push to get it passing CI (#2710)
    - Ignore extensions when finding highest capture index (#2946)
    - Image capture enhancements mega-PR â€” Godzilla EditionÂ©Â®â„¢ ðŸ¦– (#2503)
    - Implement Voodoo usability fixes (#3103)
    - Implement integer viewport scaling (#2456)
    - Improve the "mode 1" deinterlace method (#3192)
    - Include low width resolution in VGA scanning citeria (#2582)
    - Introduce PixelFormat enum (#2735)
    - Let the VESA 8-bit mode draw lines from the DAC palette (#2494)
    - Limit consecutive duplicate frames in VFR presentation mode (#3004)
    - Make triangle_worker members threadsafe (#2434)
    - Minor voodoo performance tweaks (#2435)
    - Monochrome mode fixes & improvements (#2769)
    - Only capture the visible image in rendered image capture mode (#3194)
    - Perform console cursor and text calls via interrupt (#3113)
    - Port Voodoo support with multi-threaded software backend (#2410)
    - Present VFR duplicate frames on a tempo (#2379)
    - Refine when `presentation mode = auto` uses throttled mode (#2818)
    - Reload shader fixes (#2730)
    - Remove scan and pixel doubling config settings (#2728)
    - Rename PixelFormat enum members BGR555 and BGR565 to RGB555 and RGB565 (#2823)
    - Rendering related refactorings (#2739)
    - Replace busy-wait atomic bool goto logic (#2545)
    - Resize VGA within half the current frame-time (#2510) (#2528)
    - Restore authentic text mode pixel aspect ratio calculation (#2625)
    - Retire surface output (#2780)
    - Simplify and improve `presentation_mode` handling (#2690)
    - Simplify double-scan criteria and let users `'force_vga_single_scan'` w/ conf option (#2428)
    - Update Catmull-Rom shader (#2786)
    - Video related refactorings (#2808)
    - Window sizing improvements & aspect ratio related cleanup (#2749)
    - `crt-auto` should auto-switch to VGA shaders in EGA modes with 18-bit VGA palettes (#2819)
    - `sdlmain` improvements (#3123)


## Sound 


### Mixer allows quieting Tandy and OPL hanging notes with a fade out timer

Games like Bard's Tale Construction Set and California Games II suffer from an
issue of hanging notes due to the games writing to the port without
terminating them. DOSBox Staging now allows an option to quiet down those port
writes with a fade out timer.

### Tandy sound mode can be enabled without booting up as the Tandy 1000

This makes it easier to play your games with Tandy sound, as DOSBox Staging
doesn't have to be booted up as the Tandy 1000. DOSBox Staging also
reinitialises the DAC every time Tandy sound is switched on to make sure
digital audio in games like Space Quest 3 is played back.

### CD-ROM emulation now simulates optical disc seek time delay to fix music in a few games

DOSBox Staging now simulates CD-ROM seek delay more accurately to fix CD audio
in games like Chasm: The Rift from failing to play the music after 20 minutes
of gameplay.

### IBM Music Feature Card support

IBM Music Feature Card is a rare and expensive sound card from the late 1980s.
It is mainly supported in early Sierra SCI games and a few others, like
Silpheed. Thanks to Loris Chiocca for authoring this originally!

### MIDI portamento messages are not sent to FluidSynth to eliminate warped tones

Roland SC-55 and FluidSynth handle MIDI portamento messages very differently,
which would result in warped tones in a few games like Descent. With MIDI
portamento messages not being passed to FluidSynth the sound is closer to the
Roland SC-55.

??? note "Full PR list of sound related changes"

    - Accumulate GUS frames accross each voice instead of per-sample (#2696) (#2698)
    - Add Loris Chiocca's IBM Music Feature Card (IMFC) patch  (#2367)
    - Add `iir` to the set of MSYS2 packages (#2242)
    - Add a fade-to-sleep-after-last-port-write feature to the mixer (#3058)
    - Always clamp 'frames_needed' to the allowed mix/max range in the mixer (#2843)
    - Clamp the max Sound Blaster 16 sample rate to 45454 Hz, not 45000 Hz (#2676)
    - Cleanup the GUS and SB DMA channels on close (#2585)
    - Consistently cast and wrap the mixer's position (#2745)
    - Do not send portamento messages (MIDI CC 5, 65 & 84) to FluidSynth (#2705)
    - Don't rename the CMS mixer channel to GAMEBLASTER when `sbtype` is `gb` (#2228)
    - Drop volatile members in IMFC and reSIDfp (#2380)
    - Extract MIXER command into its own file (#2839)
    - Fix MIDI capture (#2707)
    - Fix Sound Blaster DMA ADPCM frame count assertion error (#2277)
    - Fix a Coverity warning in SDL Sound (#3000)
    - Fix a GUS regression when interpolating 16-bit samples (#2576)
    - Fix a couple regressions in `main` relating to MIDI refactoring (#2541)
    - Fix duplicate SoundFont listing in mixer /listmidi (#3074)
    - Fix spurious directory separators in `mixer /listmidi` output (#2383)
    - Fix state handling of the BIOS's Tandy DAC callbacks (#3148)
    - Fix the priority of the "set decibel volume" MIXER command (#3068)
    - Ignore speaker-output enable/disable commands on the SB16 (#3105)
    - Implement CD Audio using Linux ioctls (#2675)
    - Improve MIDI buffer underrun logging (#2227)
    - Let derived CDROM devices asynchronously lag their calls (#2622)
    - Let only one device reserve a DMA channel at a time (#2593)
    - Link mt32emu statically in the MSYS2 CI release (#2711)
    - Load MT-32 ROMs from `romdir` using hash matches  (#2591)
    - Lookup MT-32 ROMs using std::filesystem paths (#2387)
    - MIDI mute improvements (#2318)
    - MIXER command improvements & general mixer enhancements + fixes (#2868)
    - Minor string fixes in MIXER command (#3072)
    - Mixer refactoring & cleanup (#2787)
    - Only process MT-32 debug messages in debug builds (#3100)
    - Re-add the SDL Sound assert (third time's a charm?) (#3006)
    - Re-initialize the BIOS DAC callbacks on SB and Tandy changes (#3142)
    - Refill the SB audio channel when DMA reaches terminal count (#233) (#2614)
    - Rework the MT-32/CM-32L ROM lookup and `MIXER /LISTMIDI` improvements (#3011)
    - Sanitise raw MIDI output by default & add `raw_midi_output` config option (#2308)
    - Sync Nuked-OPL3 with upstream (#3015)
    - Sync YM1728B_emu with upstream (#3021)
    - Sync fluidsynth, glib, gtest, libjpeg-turbo, and mt32emu wraps (#2991)
    - Sync reSIDfp with upstream (#3067)
    - Sync residfp with 2.4.2 (#2259)
    - Try again to fix Coverity warning in SDL Sound (#3005)
    - Tune the IBM Music Feature card's 0-dB level and default filter  (#3048)
    - Un-deprecate the per-SoundFont volume scaling (#2677)


## Input 

### Brazilian ABNT2 keyboards support

The mapper, keyboard, and BIOS tables are expanded to handle the OEM102 and
ABNT1 keys (found on Brazilian ABNT2 keyboards). The left and right Windows
keys are given their correct scan codes (91 and 92).

### Virtual joysticks can now be created without a physical joystick being plugged in

Fixes a regression introduced early in DOSBox Staging development, which now
allows keyboard events to be mapped into joystick events. The deactivation
logic of the pressed key now detects when the key is not being pressed
anymore. Improves support for 74 games.

### Register level emulation of the PS/2 mouse port

The PS/2 mouse port is now emulated at the register level, and many more PS/2
protocol commands are now supported. This allows the emulation of fairly
complex input devices like the Microsoft IntelliMouse Explorer with 5 buttons
and a mouse wheel on Windows 95.

### Mapping of the mouse buttons to the keyboard keys support

Games like Settlers I (known as Serf City: Life is Feudal) require the player
to push both mouse buttons at the same time to perform an action. This is
impossible to perform with input devices like the Apple MacBook trackpad and
the ChesterMouse and has now been fixed by allowing the users to map the mouse
buttons to the keyboard keys.

### VirtualBox mouse protocol support for the unofficial Windows 3.1x driver

Installing Jarvis Pedro's VirtualBox driver
(https://git.javispedro.com/cgit/vbmouse.git/about/) allows seamless
integration of the Windows 3.1x environment into your host OS by making sure
the mouse tracks exactly the same inside Windows 3.1x as in the host operating
system. The mouse cursor will seamlessly track over DOSBox Staging window
edges.


??? note "Full PR list of input related changes"

    - Add extra hotkey button row in the mapper (#3147)
    - Add mouse button mapping community patch (#3078)
    - Add multi-monitor awareness mode for mouse capture (#2377)
    - Create and update joy binds even when physical joysticks aren't present (#2516)
    - DOS mouse driver fixes (#2601)
    - Fix compatibility problems with VBADOS (VBMOUSE.EXE) mouse driver (#2742)
    - Fix deactivation of queued joystick axis movement (#2713)
    - Fix joysticks breaking after a config -set (#2694)
    - Fix memory access in VirtualBox device, enable VirtualBox mouse protocol (#3089)
    - Fix mouse centering on high DPI displays with scaling enabled (#2611)
    - Fix mouse movement limitation regression in some games (#2648)
    - Fix mouse problem with windowed mode and viewport_resolution setting (#2333)
    - Fix problem with some software (like MSD.EXE) displaying garbage mouse driver info (#2538)
    - Fix register-level PS/2 mouse access when DOS mouse driver is disabled (#3120)
    - Fix the scan code sequence for the `pause` key (#2498)
    - Handle OEM102 and ABNT1 keyboard scancodes (#2209)
    - Implement DOS mouse driver function 0x32 (#2508)
    - Implement i8042 diagnostic dump (#2298)
    - Improve `mouse_sensitivity` behavior (#3138)
    - Improve i8042 emulation, fix KEYB.COM (#2293)
    - Improve text mode detection in DOS mouse driver (#2658)
    - Keyboard rework and PS/2 mouse register-level access support (#2287)
    - Minor cleanups in mouse and keyboard emulation code (#2230)
    - Only unmute / unpause when Window focus is gained (#2254)
    - Pause fixes (#2323)
    - Port keymapper to SDL renderer (#2763)
    - Prefer evdev mouse API over xinput on Linux (#2529)
    - Release mouse if `config -set mouse_capture=nomouse` is executed (#3129)
    - Reset DOS mouse driver position granularity on every mode change (#2608)
    - Reworked virtual machine mouse support (#2755)
    - Workaround for keyboard problem in Ultima VIII: Pagan (#3109)


## Host integration 

### Max 100% is now thread capacity 100% for optimum performance

Previously, using the max 100% setting resulted in only 90% of the thread
capacity being used. Now DOSBox Staging uses the full 100% capacity of the
thread, resulting in similar or better performance versus the previous 0.80.1,
even with the new accuracy improvements. This also makes the main thread go
into oversubscription at times (over 100% capacity), resulting in a faster and
more aggressive boost clock ramp-up.

### The Mac Touch Bar or media keys can now operate as function keys in DOSBox Staging

macOS users can now force the Touch Bar or media keys to operate as function
keys when using DOSBox Staging (this will not affect other apps or the OS).
Instructions on how to set this up can be found in the DOSBox Staging Wiki:
(https://github.com/dosbox-staging/dosbox-staging/wiki/Tips-&-tricks#force-touch-bar-or-media-keys-to-operate-as-function-keys-when-using-dosbox-staging-on-macos)

### Modernised application icons

The new icons are compliant with modern OS interface guidelines and improve
legibility in small icon sizes. A custom icon has been added for macOS that
conforms to the Human Interface Guidelines with a rectangle with rounded
corners design.

### Emulation isn't throttled anymore when the window becomes unfocused

Throttling emulation in today's multitasking workflows becomes an issue if you
want to listen to the game music while you're doing something else, since this
would cause the music to skip. This also doubles the performance when running
longer tasks in the background, like compiling DOS programs with Open Watcom
C/C++.

### Linux debugger-enabled builds now have OpenGL enabled

Debugger-enabled builds utilising the internal debugger now have OpenGL
enabled, which will make the debugger environment much faster to use and make
the environment more welcoming to anyone who likes to use this feature on
Linux.

### Multi-monitor-aware mouse capture support

DOSBox Staging now has fully multi-monitor-aware mouse capture. When
multi-monitor awareness mode is enabled, switching to full screen does not
automatically capture the mouse. In full screen mode, it is possible to
release the mouse. Seamless capture works in full screen mode, allowing you to
freely move the mouse cursor between the monitors.

### Command-line user experience improvements

We listened to our users and improved the command-line user experience. Every
option has been looked at critically; text descriptions have been rewritten,
and some old options have been removed that are not applicable to the current
state of the software. All behaviour is still backwards compatible to ensure
smooth operation with old batch files and shell scripts.

### DOS file and directory attributes support for Windows, macOS, and Linux

All DOS file and directory attributes are now supported on all three supported
platforms. On Windows, the attributes are normally stored in the file system.
On macOS and Linux, they're stored as read-only attributes or as file system
extended attributes. The format is compatible with Wine and dosemu2.

### Refinements to the Pause function

The Pause function now operates on the same principle as the Mute function.
Pressing the hotkey turns on Pause, and pressing the hotkey again unpauses.
Alt+Pause remains the hotkey for Windows and Linux. macOS has a new hotkey
assigned as âŒ˜ Command-P.


??? note "Full PR list of DOS integration changes"

    - Add FOR Command (#3094)
    - Add full file path printing for file related debugger commands (#2472)
    - Add short prompts for MORE commands for 40 column screen modes (#2953)
    - Auto enable shell variable expansion for DOS >=7 (#2378)
    - Autoexec fixes (#3007)
    - Cleanup AUTOEXEC.BAT generation (#2609)
    - Disable writing command line history if entry is empty (#2635)
    - Do not discard empty lines in `[autoexec]` section (#2415)
    - Do not write SETVER table back to file if secure mode is engaged (#2623)
    - Don't block r/w file opens on r/o FAT images (#2280)
    - Don't save command history to current working directory (#2630)
    - Enable large disk image support (#2301)
    - Exclude COMMAND.COM's help arguments when part of sub-command (#2263) (#2264)
    - FAT image mounting fixes (#2278)
    - FCB argument regression fix (#2524)
    - File attribute support improvements (#2961)
    - Filesystem fixes (#2288)
    - Fix MSCDEX regression in game "Fascination (1991)" (#3163)
    - Fix alignment of file size column in the DIR command's output (#2799)
    - Fix batch file 'goto' for previous labels (#2384)
    - Fix bug where DTA can be modified by DELETE command (#2653)
    - Fix drive automounts (#3038)
    - Fix file creation regression on case sensitive file systems (#2971)
    - Fix for DOS error code being wrongly set on creating files (#2989)
    - Fix lockup involving specific mount order (#2310)
    - Fix mounting directory with space in its name, passed as an argument (#2626)
    - Fix read checks in shell file reader (#3076)
    - Fix unneeded empty lines in 'TREE | MORE' display (#2944)
    - Fixes for shell_misc.cpp regressions (#2517)
    - Ignore trailing colon in shell redirection (#2240) (#2446)
    - Implement DOS file/directory attributes support (#2951)
    - Implement MOVE shell command (#2660)
    - Implement SETVER.EXE command (#2464)
    - Implement TREE.COM command (#2366)
    - Implement persistent command line history (#2615)
    - Implemented VOL shell command (#2638)
    - Improve the help and output of the `CONFIG` command (#2672)
    - Improve the online help of the MORE command (#2947)
    - Improve verbosity of DELETE command (#2274)
    - Improve wildcard handling for `imgmount` file arguments (#2270)
    - Make MOVE and SUBST external commands (#2691)
    - Make shell configuration shortcuts optional/configurable (#2807)
    - Omit blank lines from command history (#2673)
    - Re-write CLS command to not change screen mode (#3024)
    - Re-write DOS_Shell::CMD_RENAME (#3126)
    - Rename command_history to shell_history, for consistency (#2640)
    - Rework and improve `LS.COM` command (#3034)
    - Skip processing of hidden host files (#2240)
    - Tab completion fixes for / and . (#2555)
    - Track and free allocations in MEM program (#2534)





## Documenation

### The man page is fully rewritten

The man page is now fully rewritten. All the changes reflect improvements to
the command-line user experience. The new man page is shorter yet has more of
the information you would need by removing legacy entries. The new man page
received input from four people for improvements.

### Translation updates

Updates to Polish, Dutch, and Italian translations. The command-line --help
text is now translatable and correctly prints UTF-8 strings on Windows. The
translation workflow has been simplified. A batch file for converting
translations made on Windows to Unix carriage return format has been added.

### Getting Started Guide added

The Getting Started Guide has been written for people new to DOSBox. The
Getting Started Guide instructs people how to set up their own DOSBox
environment through easy-to-follow instructions with a lot of pictures and an
approach of learning while having fun setting up and playing famous DOS games.



??? note "Full PR list of documentation related changes"

    - Add Instructions to Build on Nix (#2326)
    - Add game mode support for macOS Sonoma or newer (#3016)
    - Add getting started guide (#2413)
    - Add v0.80.1 release notes (#2203)
    - Fix a few bad links in README. (#2320)
    - Fix or simplify some descriptions (#3062)
    - Fix the formatting of some config descriptions (#2560)
    - Harmonize some help strings (#2686)
    - Improve some config setting descriptions (#2578)
    - Let the command line `--help` text be translatable (#3052)
    - Minor configuration file cleanups (#2634)
    - Modify deploy website workflow to deploy to the GitHub Pages org repo (#2202)
    - Move Wiki link to the top navbar from the footer (#2206)
    - Normalise config descriptions and add default values to most of them (#2221)
    - README.md typo Vorbis (#2791)
    - Remove opencaptures (#2970)
    - Rename 'cdda' to 'cdaudio' in the MIXER help examples (#2725)
    - Revise the README template & include link to the new Getting Started â€¦ (#2360)
    - Snip truism note from MIXER long help text (#3066)
    - String fixes in CONFIG command (#2723)
    - Update DOCUMENTATION.md (#2827)
    - Update docs with supported versions of Windows, macOS, and Linux (#2258) (#2276)
    - Update the Linux `man` page (#2837)
    - Various config setting description improvements (#2729)
    - [DRAFT] Our man page is currently unmaintained - do not install it (#2820)


??? note "Full PR list of localisation related changes"

    - Add batch file (Windows) to convert GOG cp437 config files to UTF-8 (#3031)
    - Add countries and historic locales from OS/2 Warp 4.52 (#3182)
    - Add legacy codepage to UTF-8 script (#3029)
    - Add more definitions to Unicode engine (#3084)
    - Add translation batch file for Windows (#2303)
    - Country codes cleanup, fix incorrect country set in some cases (#3134)
    - Country support improvements (#3164)
    - Fix UTF8 to DOS conversion by mistake applied twice in autoexec code (#2645)
    - Fix extended ASCII codes not being rendered in batch files (#3028)
    - Fix few English strings, update Polish (pl) translation (#2295)
    - Fix problem with loading Unicode data files in some situations (#2641)
    - Fix some mistakes in code page character to Unicode mappings (#2490)
    - Group together shell error strings (#2343)
    - Handle host code pages when running `dosbox.exe --help` on Windows (#3064)
    - Improve Arabic support in Unicode engine (#2458)
    - Improve Unicode character fallback rules (#2594)
    - Improve batch file to convert GOG cp437 config files to UTF-8 (#3042)
    - Make `--list-glshaders` output translatable (#3178)
    - Minor Unicode definitions improvements (#3153)
    - Minor country and help fixes (#3186)
    - Rework AUTOEXEC.BAT support, make it UTF-8 aware (#2425)
    - Simplify translation workflow (#2954)
    - Two trivial fixes (#2423)
    - Unicode (and [autoexec]) improvements (#2422)
    - Unicode engine improvements (#2548)
    - Unicode mapping for CYRILLIC LETTER I WITH GRAVE, RUBLE, BG (#2621)
    - Update Dutch (nl) translation (#2372)
    - Update Dutch (nl) translation (#2657)
    - Update Dutch (nl) translation (#2680)
    - Update Dutch (nl) translation (#2824)
    - Update Dutch (nl) translation (#2974)
    - Update Dutch (nl) translation (#3069)
    - Update Dutch (nl) translation (#3187)
    - Update Italian (it-IT) translation (improved some strings) (#2419)
    - Update Italian (it-IT) translation (#2327)
    - Update Italian (it-IT) translation (#2385)
    - Update Italian (it-it) translation (#2302)
    - Update Italian (it-it) translation (#2226)
    - Update Italian (it-it) translation (#2476)
    - Update Italian (it-it) translation (#2497)
    - Update Italian (it-it) translation (#2584)
    - Update Italian (it-it) translation (#2643)
    - Update Italian (it-it) translation (#2702)
    - Update Italian (it-it) translation (#2737)
    - Update Italian (it-it) translation (#2815)
    - Update Italian (it-it) translation (#2980)
    - Update Italian (it-it) translation (#3065)
    - Update Italian (it-it) translation (#3137)
    - Update Polish (pl) translation, fix one more English string (#2724)
    - Update Polish (pl) translation, trivial fix to one help string (#2644)
    - Update Polish (pl) translation (#2300)
    - Update Polish (pl) translation (#2337)
    - Update Polish (pl) translation (#2381)
    - Update Polish (pl) translation (#2493)
    - Update Polish (pl) translation (#2810)
    - Update Polish (pl) translation (#3033)
    - Update Polish (pl) translation (#3071)
    - Update Polish (pl) (#translation3176)


??? note "Full PR list of misc enhancements changes"

    - Always write the primary config if it doesn't exist (#2966)
    - Don't throttle emulation speed when window becomes unfocused (#3085)
    - Enable loguru stack traces (#2652)
    - Fix FROUND Issues (#3161)
    - Fix rounding when very close to an integer (#3149)
    - Import FPU scale fix for x86 normal core (#2297)
    - Improve handling of deprecated settings and other setting related improvements (#3118)
    - Increase maximum memory size to 384 MB (256 MB+128 MB) (#2289)
    - Logging & config description improvements (#2668)
    - Never hard-exit DOSBox when an x87 FPU stack overflow is detected (#2564)
    - Normalise warnings messages (#3143)
    - Regenerate primary config file if it is empty (#3139)
    - Restore pause on macOS & pause indicator in the window's title bar (#3140)
    - Restore sane `max N%` cycles behaviour where 100% means 100% (#3141)
    - Skip compiler if error instead of aborting in compile_commits.sh (#3130)
    - Skip hidden dot files when wildcard pattern is first (#2492)
    - Turn down loguru verbosity when started with following arugments (#2722)
    - Update Tracy to 0.10 (#3022)
    - Update increaseticks sleep strategy (#2655)
    - Updated modem CONNECT response behavior (#3023)
    - Use C++11 `std::nearbyint()` for nearest FPU round (#2296)
    - Use dynamic SDL version checking for logging (#2689)


??? note "Full PR list of misc fixes changes"

    - Adapt to setup function additions (#2563)
    - Add missing mutex lock to RWQueue (#2773)
    - Always write the default config if the primary config file is missing (#3117)
    - Change drive macros to return boolean values (#3020)
    - Close file descriptor in cdrom ioctl class (#2685)
    - Copy only the available command line chars (#2542)
    - Do not assert if mapperfile parameter is empty (#2995)
    - Don't emulate CDROM lag for stationary calls (#2624)
    - Don't sign extend 16-bit immediates to 32-bit in ppc64le dynrec, fixes #2846 (#2850)
    - Fix `pause_when_inactive` mouse behavior for macOS and Linux (#2262)
    - Fix completion index assertion error (#2531)
    - Fix incorrect version reporting in Virtualbox LOG_WARNING. (#3002)
    - Fix macOS debugger crash (#2495)
    - Fix mistake in a comment (#2299)
    - Fix mouse pointer for MS Word 5.5, based on DOSBox-X implementation (#2504)
    - Fix no function names in Loguru stack traces on Linux (#2682)
    - Fix null pointer de-reference in dyncache on Windows (#2863)
    - Fix ppc64le backend and 64K page size support (#2828)
    - Gracefully quit stdin loops on program termination (#2392)
    - Handle exiting when `pause_when_inactive = true` (#3079)
    - Make conf path handling more robust (#2241)
    - Prevent duplicate SDL Window creation when using OpenGL (#2822)
    - Replace invalid vector.end dereference with raw pointer access (#2471)
    - Set the icon on window regeneration (#3081)
    - Store envelope channel_name as std::string (#2670)
    - Track previously added userdata when deleting the SDL resize watch (#2802)
    - Use int64_t consistently for tick durations (#2596)
    - Website - dev builds query improvement (#3168)
    - Zero initalize memory allocation in GrowWriteMask in dyn_cache (#2986)

??? note "Full PR list of other changes"

    - Add GitHub workflow to deploy the new MkDocs website (#2201)
    - Add docker image and CI job for ppc64le architecture (#2834)
    - Add note about InnoSetup (#2244)
    - Add package download URL to issue template (#2473)
    - Add pull request template (#2845)
    - Add v0.80.1 download links (#2205)
    - Avoid checked-STL false positives in Coverity build (#2561)
    - Bundle all license texts with binary packages (#2420)
    - Cleanup formatting of a couple markdown tables (#2972)
    - Contribute an SDL audio test tool (#2317)
    - Disable FluidSynth's own unit tests under MSYS2 CI (#2357)
    - Drop Ubuntu 18.04 from the CI workflows (#2292)
    - Fix search (#2207)
    - Fix website development build download page (#3167)
    - Improve caching of subpackages (#2269)
    - Let MacOS homebrew overwrite conflicting junk files in CI (#2716)
    - Mention Raspberry Pi support on the website (#2214)
    - Move Inno note to own section (#2249)
    - Reinstate MSVC CI workflow (#2573)
    - Remove the SSE 4.2 instruction set from the hardware requirements (`main`-branch PR) (#2959)
    - Revisit our approach to categorising items in the release notes (#3196)
    - Support the right control key on MacOS. (#2314)
    - Suppress ALSA API macros PVS Studio warnings (#2783)
    - Update Coverity to version 2023.6.2 (#3175)
    - Update Windows 32-bit checksum (#2507)
    - Update Windows SSL certificate authority in MSYS2 workflow (#2245)
    - Update packages/*.txt files to include ffmpeg and conan (#2805)
    - Update templates (#2830)
    - Upgrade MkDocs & remove all warnings (#3049)
    - Website improvements (#2210)
    - docs (main): Fix SHA256 checksum reported for macOS package (#2454)
    - docs: Fix FluidR3_GM_GS download link the in the Getting Started guide (#2469)
    - docs: Mention HiDPI support for Linux on front page (#2796)
    - docs: Show Mastodon link (#2436)
    - website: Remove 0.79.0 release from downloads as the files are missing (#2697)
    - website: Remove Snap link from linux.md (main-branch PR) (#2963)


??? note "Full PR list of project maintenance changes"

    - Add "Start DOSBox Staging (logging)" command to the macOS DMG image (#2352)
    - Add a memory read breakpoint feature to the builtin debugger (#3191)
    - Add a script to compile all commits on the current branch (#2642)
    - Add higher res icons to meson install script (#3179)
    - Add several warnings to the GCC build (#2661)
    - Add support for FreeBSD and OpenBSD (#2338)
    - Add warning log if message is missing (#2566)
    - Add wrap for SDL2 to support static macos builds (#2239)
    - Adjust ticksDone with render time (#3136)
    - Another batch of PVS Studio fixes (#2756)
    - Another batch of PVS Studio fixes (#2776)
    - Boolean config param handling improvements & cleanup (#2354)
    - Bound and pin dependency versions (#2217)
    - Change sdl.opengl.shader_source from std::string_view to std::string (#2753)
    - Check and log *nix `ioctl` return-code errors (#2721)
    - Clean up VESA_GetSVGAInformation() & get rid of warnings (#2715)
    - Cleanup a Coverity null-deference reloading the shader (#2633)
    - Cleanup a handful of PVS Studio warnings (#2627)
    - Cleanup a handful of unchecked return-code issues flagged by Coverity (#3180)
    - Cleanup a handul of new Coverity issues  (#2639)
    - Cleanup among PCI/Memory constants (#2733)
    - Cleanup in cross.cpp (#2447)
    - Cleanup new CI warnings due to host-side updates (#2836)
    - Cleanup two ASAN initialization order issues (#2330)
    - Compile debug builds with GCC and Clang library check flags (#2553)
    - Convert SDLOSXCAGuard files to UTF-8 (#2982)
    - De-unionise X86PageEntry (#2994)
    - Debug/trace logging improvements (#2832)
    - Differentiate CLI arguments from markup tags with escapes (#2349)
    - Do not set icon at runtime (#3171)
    - Drop Visual Studio 2019-specific accomodations in `.clang-format`  (#2489)
    - Encapsulate the Cache's write mask functions as members (#2990)
    - Fix OpenGL symbol type mismatch warning at link time (#3098)
    - Fix Visual Studio project & filter definitions for src/hardware (#2459)
    - Fix `format-commit.sh`, Stop reformatting `#include`s (#2388)
    - Fix a couple Coverity warnings involved unchecked return values (#2631)
    - Fix a couple recent Coverity warnings (#2368)
    - Fix compilation error on `misc_util.h`  (#2329)
    - Fix coverity sign extension warning (#3001)
    - Fix flipped ANSI colour intensity flag bug and use canonical CGA colour tag names (#2979)
    - Fix for spelling mistake on NixOS.txt (#2363)
    - Fix minor data read access issues flagged by TSAN (#2328)
    - Fix nullptr compiler warnings (#2709)
    - Fix several static analysis warnings (#2750)
    - Fix small typos on `build-nix.md`  (#2341)
    - Fixing missing header file for select() syscall when building on MacOâ€¦ (#2968)
    - Harmonize ManyMouse support message in the build system (#3050)
    - Hopefully make MSYS2 build pass (#2692)
    - Improve DOSBox Staging application icons (#3157)
    - Improve XMS emulation, based on code from DOSBox-X (#2386)
    - Improve compile commits script (#2760)
    - Increase max memory size to 3072 MB, minor cleanup (#2334)
    - Let Meson use a system call to detect the page size (#3174)
    - Let `DriveManager` own all filesystem and image mount objects (#2306)
    - Make BatchFile Testable (#2618)
    - Make the DOS module depend on SDL2 net (#2358)
    - Make the RWQueue more usable for complex types (#2522)
    - Mark all core run functions with `noexcept` (#2251)
    - Move `bit_view` value assignment to a general function (#2290)
    - Move dynamic FPU synchronization inside preprocessor defines (#2252)
    - Normalise Windows context menus created by the installer (#2355)
    - Notify all when RWQueue stops (#2775)
    - PVS Studio fixes (#3088)
    - PVS Studio warning fixes (#3070)
    - Perform safe left-shift of signed values in dynrec operators (#2535)
    - Recommend the project-release tarball first (`main` website) (#2500)
    - Refactor Prop_path to use std_fs::path (#2700)
    - Refactor Property->Get_string to return a std::string (#3009)
    - Refactor WriteOut functions in program.cpp (#2309)
    - Refactor command line arguments (#2703)
    - Refactor shell_batch.cpp (#2342)
    - Refactor shell_misc.cpp (#2482)
    - Remove fontstash library (#3013)
    - Remove obsolete APIs from 'dos_system.h' (#2976)
    - Restore files required by the Linux Flatpak build (#2213)
    - Revert increaseticks sleep to 1ms (#2792)
    - Revert use of pinned vcpkg versions (#2222)
    - Show backtraces in debug builds using Loguru's assert (#2650)
    - Suppress excessively verbose `sprintf` warnings on macos + clang (#2307)
    - Sync GHC std::filesystem with v1.5.14 (#2613)
    - Sync Meson wraps with upstream (#2427)
    - Sync decoders with upstream versions (#2718)
    - Sync enet with upstream version 2.3.6 (#3012)
    - Sync flatpak metadata up to `0.81.0-alpha` (#2216)
    - Sync whereami with upstream (#3017)
    - Typo fixed in setup.cpp (#3063)
    - Update Linux AppData description (#2732)
    - Update Linux and macOS debug CI workflows  (#2628)
    - Update RPM spec file (#2659)
    - Update macOS build instructions (#3044)
    - Use safe_strcpy and safe_strcat (#3003)
    - Use safer calls in dynrec and operators (#2350)
    - core_dyn_x86: Initialise rettype to avoid compiler warning (#2365)

## Miscellaneous

### Maximum memory space increased to 3 GB

The maximum memory space to be allocated has been raised from 63 MB to 3,072
MB. MEM command now supports XMS memory capacities over 64 MB and has the bug
fixed that made it fail to release upper memory after being run. Windows 3.1x
now allows more than 64 MB of RAM to be allocated.

### DOS command-line tools added and improved

The TREE, SETVER, MOVE, and VOL commands have been added. The MORE command is
now extended with features from modern Windows. The LS command now accepts
multiple paths or patterns and ignores hidden or system files unless the /a
switch is specified. The COMMAND.COM shortcuts for CONFIG options can now be
disabled.

### Modem speed and baud rate now match by default

The Modem speed and port baud rate now match by default. This will make
operation easier as there isn't a possibility for the modem and port speeds to
mismatch by default anymore. Modem speed is now reported in bps (bits per
second) to differentiate it from port speed. This will fix Doom 1.2, which
mandates a modem speed of 9,600 bps.

### Persistent command-line history

The COMMAND.COM now retains a 500-line history of your previous commands to
the command-line interpreter. This history will be remembered across multiple
sessions, just like you would expect with bash history on Linux.

### Better software compatibility by allowing x87 stack overflow

Previously, DOSBox Staging would hard exit when faced with an x87 stack
overflow condition. Real DOS allowed the system to continue to run when faced
with an x87 stack overflow condition. We're now emulating DOS behaviour more
closely, which will improve compatibility with some demos like kkowboy.

### Intel Floating Point Conformance Test passes with 0 failures on the x86 hosts

The Intel Floating Point Conformance Test for IEEE 754-1985 now passes with 0
failures on hosts with the x86 family of CPUs on all the cores. The 80-bit
extended precision format is truncated to the 64-bit double precision format
on non-x86 hosts for performance reasons, and these hosts shouldn't be used
for any engineering or financial calculations.

### Trace logging now has easy-to-setup colour support for logging events

The integrated Loguru trace logger has been improved with easy-to-setup colour
support for logging events. Different modules can be set to display events
with their own colours which makes trace logging much easier and more
intuitive for the user. LOG_DEBUG uses green colour and LOG_TRACE uses purple
colour to really stand out.

### FOR command was added to support FOR loops

The batch files with FOR loops now run properly, resulting in better software
compatibility. The behavior mirrors the MS-DOS 6.22 FOR command and has been
thoroughly tested by the users and by automated unit tests created to verify
the integrity of the implementation.




## Translations


## Contributors

The following commit authors, sponsors, supporters, and backers all invested
their time or funds into the 0.80 release effort. Thank you!

Contributors are listed in alphabetic order.


### 0.81 commit authors

<div class="compact" markdown>

- Burrito78
- dreamer
- drfiemost
- FeralChild64
- GranMinigun
- javispedro
- Jkapp76
- johnnovak
- jrdennisoss
- Kappa971
- kcgen
- kklobe
- LowLevelMahn
- memononen
- nemo93
- NicknineTheEagle
- rderooy
- rsribeiro
- tyrells

</div>


### 0.81 sponsors

Sponsors who donated more than **100 USD per month** to the project:

<div class="compact" markdown>

- Antti Peltola (1000 USD during the period)
- Wengier Wu (380 USD during the period)

</div>


### 0.81 backers

Backers who donated more than **5 USD per month** to the project:

<div class="compact" markdown>

- Burrito78
- Hannu Hartikainen
- Hugo Locurcio

</div>

Thank you for considering supporting our work through a donation on
[GitHub Sponsors](https://github.com/sponsors/dosbox-staging) or
[Open Collective](https://opencollective.com/dosbox-staging). Your
contribution helps us purchase the necessary hardware and licenses to keep our
project going.


## Thank you

We are grateful for all community contributions as well as the original DOSBox
project, upon which DOSBox Staging is based.

